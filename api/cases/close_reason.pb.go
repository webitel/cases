// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: close_reason.proto

package cases

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "github.com/webitel/webitel-go-kit/cmd/protoc-gen-go-webitel/gen/go/proto/webitel"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/googleapis/api/visibility"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CloseReason message represents a close reason entity with metadata
type CloseReason struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier of the close reason
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name of the close reason
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the close reason
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Close Reason Group ID of the close reason
	CloseReasonGroupId int64 `protobuf:"varint,6,opt,name=close_reason_group_id,json=closeReasonGroupId,proto3" json:"close_reason_group_id,omitempty"`
	// CreatedAt timestamp of the close reason
	CreatedAt int64 `protobuf:"varint,20,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// UpdatedAt timestamp of the close reason
	UpdatedAt int64 `protobuf:"varint,21,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// CreatedBy user of the close reason
	CreatedBy *Lookup `protobuf:"bytes,22,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	// UpdatedBy user of the close reason
	UpdatedBy     *Lookup `protobuf:"bytes,23,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseReason) Reset() {
	*x = CloseReason{}
	mi := &file_close_reason_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseReason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseReason) ProtoMessage() {}

func (x *CloseReason) ProtoReflect() protoreflect.Message {
	mi := &file_close_reason_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseReason.ProtoReflect.Descriptor instead.
func (*CloseReason) Descriptor() ([]byte, []int) {
	return file_close_reason_proto_rawDescGZIP(), []int{0}
}

func (x *CloseReason) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CloseReason) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CloseReason) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CloseReason) GetCloseReasonGroupId() int64 {
	if x != nil {
		return x.CloseReasonGroupId
	}
	return 0
}

func (x *CloseReason) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *CloseReason) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *CloseReason) GetCreatedBy() *Lookup {
	if x != nil {
		return x.CreatedBy
	}
	return nil
}

func (x *CloseReason) GetUpdatedBy() *Lookup {
	if x != nil {
		return x.UpdatedBy
	}
	return nil
}

// InputCloseReason message for inputting close reason data
type InputCloseReason struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the close reason
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the close reason
	Description   string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InputCloseReason) Reset() {
	*x = InputCloseReason{}
	mi := &file_close_reason_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InputCloseReason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputCloseReason) ProtoMessage() {}

func (x *InputCloseReason) ProtoReflect() protoreflect.Message {
	mi := &file_close_reason_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputCloseReason.ProtoReflect.Descriptor instead.
func (*InputCloseReason) Descriptor() ([]byte, []int) {
	return file_close_reason_proto_rawDescGZIP(), []int{1}
}

func (x *InputCloseReason) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InputCloseReason) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// CloseReasonList message contains a list of CloseReason items with pagination
type CloseReasonList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Next          bool                   `protobuf:"varint,2,opt,name=next,proto3" json:"next,omitempty"`
	Items         []*CloseReason         `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseReasonList) Reset() {
	*x = CloseReasonList{}
	mi := &file_close_reason_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseReasonList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseReasonList) ProtoMessage() {}

func (x *CloseReasonList) ProtoReflect() protoreflect.Message {
	mi := &file_close_reason_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseReasonList.ProtoReflect.Descriptor instead.
func (*CloseReasonList) Descriptor() ([]byte, []int) {
	return file_close_reason_proto_rawDescGZIP(), []int{2}
}

func (x *CloseReasonList) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *CloseReasonList) GetNext() bool {
	if x != nil {
		return x.Next
	}
	return false
}

func (x *CloseReasonList) GetItems() []*CloseReason {
	if x != nil {
		return x.Items
	}
	return nil
}

// CreateCloseReasonRequest message for creating a new close reason
type CreateCloseReasonRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Input              *InputCloseReason      `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	CloseReasonGroupId int64                  `protobuf:"varint,2,opt,name=close_reason_group_id,json=closeReasonGroupId,proto3" json:"close_reason_group_id,omitempty"`
	// Fields to be retrieved as a result.
	Fields        []string `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCloseReasonRequest) Reset() {
	*x = CreateCloseReasonRequest{}
	mi := &file_close_reason_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCloseReasonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCloseReasonRequest) ProtoMessage() {}

func (x *CreateCloseReasonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_close_reason_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCloseReasonRequest.ProtoReflect.Descriptor instead.
func (*CreateCloseReasonRequest) Descriptor() ([]byte, []int) {
	return file_close_reason_proto_rawDescGZIP(), []int{3}
}

func (x *CreateCloseReasonRequest) GetInput() *InputCloseReason {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *CreateCloseReasonRequest) GetCloseReasonGroupId() int64 {
	if x != nil {
		return x.CloseReasonGroupId
	}
	return 0
}

func (x *CreateCloseReasonRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

// UpdateCloseReasonRequest message for updating an existing close reason
type UpdateCloseReasonRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	CloseReasonGroupId int64                  `protobuf:"varint,1,opt,name=close_reason_group_id,json=closeReasonGroupId,proto3" json:"close_reason_group_id,omitempty"`
	// Fields to be retrieved as a result.
	Fields []string          `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
	Id     int64             `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	Input  *InputCloseReason `protobuf:"bytes,4,opt,name=input,proto3" json:"input,omitempty"`
	// JSON PATCH fields mask.
	// List of JPath fields specified in body(input).
	XJsonMask     []string `protobuf:"bytes,5,rep,name=x_json_mask,json=xJsonMask,proto3" json:"x_json_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCloseReasonRequest) Reset() {
	*x = UpdateCloseReasonRequest{}
	mi := &file_close_reason_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCloseReasonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCloseReasonRequest) ProtoMessage() {}

func (x *UpdateCloseReasonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_close_reason_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCloseReasonRequest.ProtoReflect.Descriptor instead.
func (*UpdateCloseReasonRequest) Descriptor() ([]byte, []int) {
	return file_close_reason_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateCloseReasonRequest) GetCloseReasonGroupId() int64 {
	if x != nil {
		return x.CloseReasonGroupId
	}
	return 0
}

func (x *UpdateCloseReasonRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *UpdateCloseReasonRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCloseReasonRequest) GetInput() *InputCloseReason {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *UpdateCloseReasonRequest) GetXJsonMask() []string {
	if x != nil {
		return x.XJsonMask
	}
	return nil
}

// DeleteCloseReasonRequest message for deleting an existing close reason
type DeleteCloseReasonRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Id                 int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CloseReasonGroupId int64                  `protobuf:"varint,2,opt,name=close_reason_group_id,json=closeReasonGroupId,proto3" json:"close_reason_group_id,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *DeleteCloseReasonRequest) Reset() {
	*x = DeleteCloseReasonRequest{}
	mi := &file_close_reason_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCloseReasonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCloseReasonRequest) ProtoMessage() {}

func (x *DeleteCloseReasonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_close_reason_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCloseReasonRequest.ProtoReflect.Descriptor instead.
func (*DeleteCloseReasonRequest) Descriptor() ([]byte, []int) {
	return file_close_reason_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteCloseReasonRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteCloseReasonRequest) GetCloseReasonGroupId() int64 {
	if x != nil {
		return x.CloseReasonGroupId
	}
	return 0
}

// ListCloseReasonRequest message for listing or searching close reasons
type ListCloseReasonRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Page number of result dataset records. offset = (page*size)
	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	// Size count of records on result page. limit = (size++)
	Size int32 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	// Fields to be retrieved as a result.
	Fields []string `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"`
	// Sort the result according to fields.
	Sort string  `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Id   []int64 `protobuf:"varint,5,rep,packed,name=id,proto3" json:"id,omitempty"`
	// Search query string for filtering by name. Supports:
	// - Wildcards (*) for substring matching
	// - Placeholder (?) for single character substitution
	// - Exact match for full names
	Q string `protobuf:"bytes,6,opt,name=q,proto3" json:"q,omitempty"`
	// Close reason group ID filter
	CloseReasonGroupId int64 `protobuf:"varint,7,opt,name=close_reason_group_id,json=closeReasonGroupId,proto3" json:"close_reason_group_id,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ListCloseReasonRequest) Reset() {
	*x = ListCloseReasonRequest{}
	mi := &file_close_reason_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCloseReasonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCloseReasonRequest) ProtoMessage() {}

func (x *ListCloseReasonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_close_reason_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCloseReasonRequest.ProtoReflect.Descriptor instead.
func (*ListCloseReasonRequest) Descriptor() ([]byte, []int) {
	return file_close_reason_proto_rawDescGZIP(), []int{6}
}

func (x *ListCloseReasonRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListCloseReasonRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListCloseReasonRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *ListCloseReasonRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *ListCloseReasonRequest) GetId() []int64 {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ListCloseReasonRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *ListCloseReasonRequest) GetCloseReasonGroupId() int64 {
	if x != nil {
		return x.CloseReasonGroupId
	}
	return 0
}

// LocateCloseReasonRequest message for locating a specific close reason by ID
type LocateCloseReasonRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Id                 int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CloseReasonGroupId int64                  `protobuf:"varint,2,opt,name=close_reason_group_id,json=closeReasonGroupId,proto3" json:"close_reason_group_id,omitempty"`
	Fields             []string               `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *LocateCloseReasonRequest) Reset() {
	*x = LocateCloseReasonRequest{}
	mi := &file_close_reason_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocateCloseReasonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocateCloseReasonRequest) ProtoMessage() {}

func (x *LocateCloseReasonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_close_reason_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocateCloseReasonRequest.ProtoReflect.Descriptor instead.
func (*LocateCloseReasonRequest) Descriptor() ([]byte, []int) {
	return file_close_reason_proto_rawDescGZIP(), []int{7}
}

func (x *LocateCloseReasonRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LocateCloseReasonRequest) GetCloseReasonGroupId() int64 {
	if x != nil {
		return x.CloseReasonGroupId
	}
	return 0
}

func (x *LocateCloseReasonRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

// LocateCloseReasonResponse message contains a single close reason entity
type LocateCloseReasonResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CloseReason   *CloseReason           `protobuf:"bytes,1,opt,name=close_reason,json=closeReason,proto3" json:"close_reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocateCloseReasonResponse) Reset() {
	*x = LocateCloseReasonResponse{}
	mi := &file_close_reason_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocateCloseReasonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocateCloseReasonResponse) ProtoMessage() {}

func (x *LocateCloseReasonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_close_reason_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocateCloseReasonResponse.ProtoReflect.Descriptor instead.
func (*LocateCloseReasonResponse) Descriptor() ([]byte, []int) {
	return file_close_reason_proto_rawDescGZIP(), []int{8}
}

func (x *LocateCloseReasonResponse) GetCloseReason() *CloseReason {
	if x != nil {
		return x.CloseReason
	}
	return nil
}

var File_close_reason_proto protoreflect.FileDescriptor

const file_close_reason_proto_rawDesc = "" +
	"\n" +
	"\x12close_reason.proto\x12\rwebitel.cases\x1a\rgeneral.proto\x1a\x1bgoogle/api/visibility.proto\x1a\x1cgoogle/api/annotations.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\x1a\x1aproto/webitel/option.proto\"\xa4\x02\n" +
	"\vCloseReason\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x121\n" +
	"\x15close_reason_group_id\x18\x06 \x01(\x03R\x12closeReasonGroupId\x12\x1d\n" +
	"\n" +
	"created_at\x18\x14 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x15 \x01(\x03R\tupdatedAt\x12.\n" +
	"\n" +
	"created_by\x18\x16 \x01(\v2\x0f.general.LookupR\tcreatedBy\x12.\n" +
	"\n" +
	"updated_by\x18\x17 \x01(\v2\x0f.general.LookupR\tupdatedBy\"H\n" +
	"\x10InputCloseReason\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\"k\n" +
	"\x0fCloseReasonList\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x05R\x04page\x12\x12\n" +
	"\x04next\x18\x02 \x01(\bR\x04next\x120\n" +
	"\x05items\x18\x03 \x03(\v2\x1a.webitel.cases.CloseReasonR\x05items\"\xb6\x01\n" +
	"\x18CreateCloseReasonRequest\x125\n" +
	"\x05input\x18\x01 \x01(\v2\x1f.webitel.cases.InputCloseReasonR\x05input\x121\n" +
	"\x15close_reason_group_id\x18\x02 \x01(\x03R\x12closeReasonGroupId\x12\x16\n" +
	"\x06fields\x18\x03 \x03(\tR\x06fields:\x18\x92A\x15\n" +
	"\x13\xd2\x01\x04name\xd2\x01\tlookup_id\"\xf3\x01\n" +
	"\x18UpdateCloseReasonRequest\x121\n" +
	"\x15close_reason_group_id\x18\x01 \x01(\x03R\x12closeReasonGroupId\x12\x16\n" +
	"\x06fields\x18\x02 \x03(\tR\x06fields\x12\x0e\n" +
	"\x02id\x18\x03 \x01(\x03R\x02id\x125\n" +
	"\x05input\x18\x04 \x01(\v2\x1f.webitel.cases.InputCloseReasonR\x05input\x129\n" +
	"\vx_json_mask\x18\x05 \x03(\tB\x19\x92A\a@\x01\x8a\x01\x02^$\xfa\xd2\xe4\x93\x02\t\x12\aPREVIEWR\txJsonMask:\n" +
	"\x92A\a\n" +
	"\x05\xd2\x01\x02id\"|\n" +
	"\x18DeleteCloseReasonRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x121\n" +
	"\x15close_reason_group_id\x18\x02 \x01(\x03R\x12closeReasonGroupId:\x1d\x92A\x1a\n" +
	"\x18\xd2\x01\x15close_reason_group_id\"\xbd\x01\n" +
	"\x16ListCloseReasonRequest\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x05R\x04page\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x05R\x04size\x12\x16\n" +
	"\x06fields\x18\x03 \x03(\tR\x06fields\x12\x12\n" +
	"\x04sort\x18\x04 \x01(\tR\x04sort\x12\x0e\n" +
	"\x02id\x18\x05 \x03(\x03R\x02id\x12\f\n" +
	"\x01q\x18\x06 \x01(\tR\x01q\x121\n" +
	"\x15close_reason_group_id\x18\a \x01(\x03R\x12closeReasonGroupId\"u\n" +
	"\x18LocateCloseReasonRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x121\n" +
	"\x15close_reason_group_id\x18\x02 \x01(\x03R\x12closeReasonGroupId\x12\x16\n" +
	"\x06fields\x18\x03 \x03(\tR\x06fields\"Z\n" +
	"\x19LocateCloseReasonResponse\x12=\n" +
	"\fclose_reason\x18\x01 \x01(\v2\x1a.webitel.cases.CloseReasonR\vcloseReason2\x81\t\n" +
	"\fCloseReasons\x12\xdf\x01\n" +
	"\x10ListCloseReasons\x12%.webitel.cases.ListCloseReasonRequest\x1a\x1e.webitel.cases.CloseReasonList\"\x83\x01\x92A:\x128Retrieve a list of close reasons or search close reasons\x90\xb5\x18\x01\x82\xd3\xe4\x93\x02<\x12:/close_reason_groups/{close_reason_group_id}/close_reasons\x12\xc5\x01\n" +
	"\x11CreateCloseReason\x12'.webitel.cases.CreateCloseReasonRequest\x1a\x1a.webitel.cases.CloseReason\"k\x92A\x1b\x12\x19Create a new close reason\x90\xb5\x18\x02\x82\xd3\xe4\x93\x02C:\x05input\":/close_reason_groups/{close_reason_group_id}/close_reasons\x12\x9c\x02\n" +
	"\x11UpdateCloseReason\x12'.webitel.cases.UpdateCloseReasonRequest\x1a\x1a.webitel.cases.CloseReason\"\xc1\x01\x92A!\x12\x1fUpdate an existing close reason\x90\xb5\x18\x02\x82\xd3\xe4\x93\x02\x92\x01:\x05inputZH:\x05input2?/close_reason_groups/{close_reason_group_id}/close_reasons/{id}\x1a?/close_reason_groups/{close_reason_group_id}/close_reasons/{id}\x12\xbf\x01\n" +
	"\x11DeleteCloseReason\x12'.webitel.cases.DeleteCloseReasonRequest\x1a\x1a.webitel.cases.CloseReason\"e\x92A\x17\x12\x15Delete a close reason\x90\xb5\x18\x02\x82\xd3\xe4\x93\x02A*?/close_reason_groups/{close_reason_group_id}/close_reasons/{id}\x12\xd3\x01\n" +
	"\x11LocateCloseReason\x12'.webitel.cases.LocateCloseReasonRequest\x1a(.webitel.cases.LocateCloseReasonResponse\"k\x92A\x1d\x12\x1bLocate a close reason by ID\x90\xb5\x18\x01\x82\xd3\xe4\x93\x02A\x12?/close_reason_groups/{close_reason_group_id}/close_reasons/{id}\x1a\x10\x8a\xb5\x18\fcase_lookupsB\xa4\x01\n" +
	"\x11com.webitel.casesB\x10CloseReasonProtoP\x01Z(github.com/webitel/cases/api/cases;cases\xa2\x02\x03WCX\xaa\x02\rWebitel.Cases\xca\x02\rWebitel\\Cases\xe2\x02\x19Webitel\\Cases\\GPBMetadata\xea\x02\x0eWebitel::Casesb\x06proto3"

var (
	file_close_reason_proto_rawDescOnce sync.Once
	file_close_reason_proto_rawDescData []byte
)

func file_close_reason_proto_rawDescGZIP() []byte {
	file_close_reason_proto_rawDescOnce.Do(func() {
		file_close_reason_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_close_reason_proto_rawDesc), len(file_close_reason_proto_rawDesc)))
	})
	return file_close_reason_proto_rawDescData
}

var file_close_reason_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_close_reason_proto_goTypes = []any{
	(*CloseReason)(nil),               // 0: webitel.cases.CloseReason
	(*InputCloseReason)(nil),          // 1: webitel.cases.InputCloseReason
	(*CloseReasonList)(nil),           // 2: webitel.cases.CloseReasonList
	(*CreateCloseReasonRequest)(nil),  // 3: webitel.cases.CreateCloseReasonRequest
	(*UpdateCloseReasonRequest)(nil),  // 4: webitel.cases.UpdateCloseReasonRequest
	(*DeleteCloseReasonRequest)(nil),  // 5: webitel.cases.DeleteCloseReasonRequest
	(*ListCloseReasonRequest)(nil),    // 6: webitel.cases.ListCloseReasonRequest
	(*LocateCloseReasonRequest)(nil),  // 7: webitel.cases.LocateCloseReasonRequest
	(*LocateCloseReasonResponse)(nil), // 8: webitel.cases.LocateCloseReasonResponse
	(*Lookup)(nil),                    // 9: general.Lookup
}
var file_close_reason_proto_depIdxs = []int32{
	9,  // 0: webitel.cases.CloseReason.created_by:type_name -> general.Lookup
	9,  // 1: webitel.cases.CloseReason.updated_by:type_name -> general.Lookup
	0,  // 2: webitel.cases.CloseReasonList.items:type_name -> webitel.cases.CloseReason
	1,  // 3: webitel.cases.CreateCloseReasonRequest.input:type_name -> webitel.cases.InputCloseReason
	1,  // 4: webitel.cases.UpdateCloseReasonRequest.input:type_name -> webitel.cases.InputCloseReason
	0,  // 5: webitel.cases.LocateCloseReasonResponse.close_reason:type_name -> webitel.cases.CloseReason
	6,  // 6: webitel.cases.CloseReasons.ListCloseReasons:input_type -> webitel.cases.ListCloseReasonRequest
	3,  // 7: webitel.cases.CloseReasons.CreateCloseReason:input_type -> webitel.cases.CreateCloseReasonRequest
	4,  // 8: webitel.cases.CloseReasons.UpdateCloseReason:input_type -> webitel.cases.UpdateCloseReasonRequest
	5,  // 9: webitel.cases.CloseReasons.DeleteCloseReason:input_type -> webitel.cases.DeleteCloseReasonRequest
	7,  // 10: webitel.cases.CloseReasons.LocateCloseReason:input_type -> webitel.cases.LocateCloseReasonRequest
	2,  // 11: webitel.cases.CloseReasons.ListCloseReasons:output_type -> webitel.cases.CloseReasonList
	0,  // 12: webitel.cases.CloseReasons.CreateCloseReason:output_type -> webitel.cases.CloseReason
	0,  // 13: webitel.cases.CloseReasons.UpdateCloseReason:output_type -> webitel.cases.CloseReason
	0,  // 14: webitel.cases.CloseReasons.DeleteCloseReason:output_type -> webitel.cases.CloseReason
	8,  // 15: webitel.cases.CloseReasons.LocateCloseReason:output_type -> webitel.cases.LocateCloseReasonResponse
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_close_reason_proto_init() }
func file_close_reason_proto_init() {
	if File_close_reason_proto != nil {
		return
	}
	file_general_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_close_reason_proto_rawDesc), len(file_close_reason_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_close_reason_proto_goTypes,
		DependencyIndexes: file_close_reason_proto_depIdxs,
		MessageInfos:      file_close_reason_proto_msgTypes,
	}.Build()
	File_close_reason_proto = out.File
	file_close_reason_proto_goTypes = nil
	file_close_reason_proto_depIdxs = nil
}
