// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: cases/filters.proto

package cases

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LogicalOperator int32

const (
	LogicalOperator_And LogicalOperator = 0
	LogicalOperator_Or  LogicalOperator = 1
)

// Enum value maps for LogicalOperator.
var (
	LogicalOperator_name = map[int32]string{
		0: "And",
		1: "Or",
	}
	LogicalOperator_value = map[string]int32{
		"And": 0,
		"Or":  1,
	}
)

func (x LogicalOperator) Enum() *LogicalOperator {
	p := new(LogicalOperator)
	*p = x
	return p
}

func (x LogicalOperator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogicalOperator) Descriptor() protoreflect.EnumDescriptor {
	return file_cases_filters_proto_enumTypes[0].Descriptor()
}

func (LogicalOperator) Type() protoreflect.EnumType {
	return &file_cases_filters_proto_enumTypes[0]
}

func (x LogicalOperator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogicalOperator.Descriptor instead.
func (LogicalOperator) EnumDescriptor() ([]byte, []int) {
	return file_cases_filters_proto_rawDescGZIP(), []int{0}
}

type ComparisonOperator int32

const (
	ComparisonOperator_Equal              ComparisonOperator = 0
	ComparisonOperator_NotEqual           ComparisonOperator = 1
	ComparisonOperator_GreaterThan        ComparisonOperator = 2
	ComparisonOperator_LessThan           ComparisonOperator = 3
	ComparisonOperator_GreaterThanOrEqual ComparisonOperator = 4
	ComparisonOperator_LessThanOrEqual    ComparisonOperator = 5
	ComparisonOperator_Like               ComparisonOperator = 6
)

// Enum value maps for ComparisonOperator.
var (
	ComparisonOperator_name = map[int32]string{
		0: "Equal",
		1: "NotEqual",
		2: "GreaterThan",
		3: "LessThan",
		4: "GreaterThanOrEqual",
		5: "LessThanOrEqual",
		6: "Like",
	}
	ComparisonOperator_value = map[string]int32{
		"Equal":              0,
		"NotEqual":           1,
		"GreaterThan":        2,
		"LessThan":           3,
		"GreaterThanOrEqual": 4,
		"LessThanOrEqual":    5,
		"Like":               6,
	}
)

func (x ComparisonOperator) Enum() *ComparisonOperator {
	p := new(ComparisonOperator)
	*p = x
	return p
}

func (x ComparisonOperator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComparisonOperator) Descriptor() protoreflect.EnumDescriptor {
	return file_cases_filters_proto_enumTypes[1].Descriptor()
}

func (ComparisonOperator) Type() protoreflect.EnumType {
	return &file_cases_filters_proto_enumTypes[1]
}

func (x ComparisonOperator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ComparisonOperator.Descriptor instead.
func (ComparisonOperator) EnumDescriptor() ([]byte, []int) {
	return file_cases_filters_proto_rawDescGZIP(), []int{1}
}

type FilterNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operator LogicalOperator `protobuf:"varint,1,opt,name=operator,proto3,enum=webitel.cases.LogicalOperator" json:"operator,omitempty"`
	Operand  []*Operand      `protobuf:"bytes,2,rep,name=operand,proto3" json:"operand,omitempty"`
}

func (x *FilterNode) Reset() {
	*x = FilterNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cases_filters_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterNode) ProtoMessage() {}

func (x *FilterNode) ProtoReflect() protoreflect.Message {
	mi := &file_cases_filters_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterNode.ProtoReflect.Descriptor instead.
func (*FilterNode) Descriptor() ([]byte, []int) {
	return file_cases_filters_proto_rawDescGZIP(), []int{0}
}

func (x *FilterNode) GetOperator() LogicalOperator {
	if x != nil {
		return x.Operator
	}
	return LogicalOperator_And
}

func (x *FilterNode) GetOperand() []*Operand {
	if x != nil {
		return x.Operand
	}
	return nil
}

type Operand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//
	//	*Operand_Filter
	//	*Operand_Node
	Value isOperand_Value `protobuf_oneof:"value"`
}

func (x *Operand) Reset() {
	*x = Operand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cases_filters_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operand) ProtoMessage() {}

func (x *Operand) ProtoReflect() protoreflect.Message {
	mi := &file_cases_filters_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operand.ProtoReflect.Descriptor instead.
func (*Operand) Descriptor() ([]byte, []int) {
	return file_cases_filters_proto_rawDescGZIP(), []int{1}
}

func (m *Operand) GetValue() isOperand_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Operand) GetFilter() *Filter {
	if x, ok := x.GetValue().(*Operand_Filter); ok {
		return x.Filter
	}
	return nil
}

func (x *Operand) GetNode() *FilterNode {
	if x, ok := x.GetValue().(*Operand_Node); ok {
		return x.Node
	}
	return nil
}

type isOperand_Value interface {
	isOperand_Value()
}

type Operand_Filter struct {
	Filter *Filter `protobuf:"bytes,1,opt,name=filter,proto3,oneof"`
}

type Operand_Node struct {
	Node *FilterNode `protobuf:"bytes,2,opt,name=node,proto3,oneof"`
}

func (*Operand_Filter) isOperand_Value() {}

func (*Operand_Node) isOperand_Value() {}

type Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Column   string             `protobuf:"bytes,1,opt,name=column,proto3" json:"column,omitempty"`
	Operator ComparisonOperator `protobuf:"varint,2,opt,name=operator,proto3,enum=webitel.cases.ComparisonOperator" json:"operator,omitempty"`
	Operand  []byte             `protobuf:"bytes,3,opt,name=operand,proto3" json:"operand,omitempty"`
}

func (x *Filter) Reset() {
	*x = Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cases_filters_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_cases_filters_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_cases_filters_proto_rawDescGZIP(), []int{2}
}

func (x *Filter) GetColumn() string {
	if x != nil {
		return x.Column
	}
	return ""
}

func (x *Filter) GetOperator() ComparisonOperator {
	if x != nil {
		return x.Operator
	}
	return ComparisonOperator_Equal
}

func (x *Filter) GetOperand() []byte {
	if x != nil {
		return x.Operand
	}
	return nil
}

var File_cases_filters_proto protoreflect.FileDescriptor

var file_cases_filters_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63,
	0x61, 0x73, 0x65, 0x73, 0x22, 0x7a, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4e, 0x6f,
	0x64, 0x65, 0x12, 0x3a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63,
	0x61, 0x73, 0x65, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x30,
	0x0a, 0x07, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64,
	0x22, 0x74, 0x0a, 0x07, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x77, 0x65,
	0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x48, 0x00, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x04,
	0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x77, 0x65, 0x62,
	0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x4e, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x42, 0x07, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x79, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x3d, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x77, 0x65, 0x62,
	0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x72, 0x69, 0x73, 0x6f, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x6e,
	0x64, 0x2a, 0x22, 0x0a, 0x0f, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x6e, 0x64, 0x10, 0x00, 0x12, 0x06, 0x0a,
	0x02, 0x4f, 0x72, 0x10, 0x01, 0x2a, 0x83, 0x01, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72,
	0x69, 0x73, 0x6f, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x09, 0x0a, 0x05,
	0x45, 0x71, 0x75, 0x61, 0x6c, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x6f, 0x74, 0x45, 0x71,
	0x75, 0x61, 0x6c, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x47, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72,
	0x54, 0x68, 0x61, 0x6e, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x4c, 0x65, 0x73, 0x73, 0x54, 0x68,
	0x61, 0x6e, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x47, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54,
	0x68, 0x61, 0x6e, 0x4f, 0x72, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f,
	0x4c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x4f, 0x72, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x10,
	0x05, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x69, 0x6b, 0x65, 0x10, 0x06, 0x42, 0x2a, 0x5a, 0x28, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65,
	0x6c, 0x2f, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x61, 0x73, 0x65,
	0x73, 0x3b, 0x63, 0x61, 0x73, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cases_filters_proto_rawDescOnce sync.Once
	file_cases_filters_proto_rawDescData = file_cases_filters_proto_rawDesc
)

func file_cases_filters_proto_rawDescGZIP() []byte {
	file_cases_filters_proto_rawDescOnce.Do(func() {
		file_cases_filters_proto_rawDescData = protoimpl.X.CompressGZIP(file_cases_filters_proto_rawDescData)
	})
	return file_cases_filters_proto_rawDescData
}

var file_cases_filters_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_cases_filters_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_cases_filters_proto_goTypes = []any{
	(LogicalOperator)(0),    // 0: webitel.cases.LogicalOperator
	(ComparisonOperator)(0), // 1: webitel.cases.ComparisonOperator
	(*FilterNode)(nil),      // 2: webitel.cases.FilterNode
	(*Operand)(nil),         // 3: webitel.cases.Operand
	(*Filter)(nil),          // 4: webitel.cases.Filter
}
var file_cases_filters_proto_depIdxs = []int32{
	0, // 0: webitel.cases.FilterNode.operator:type_name -> webitel.cases.LogicalOperator
	3, // 1: webitel.cases.FilterNode.operand:type_name -> webitel.cases.Operand
	4, // 2: webitel.cases.Operand.filter:type_name -> webitel.cases.Filter
	2, // 3: webitel.cases.Operand.node:type_name -> webitel.cases.FilterNode
	1, // 4: webitel.cases.Filter.operator:type_name -> webitel.cases.ComparisonOperator
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_cases_filters_proto_init() }
func file_cases_filters_proto_init() {
	if File_cases_filters_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cases_filters_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*FilterNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cases_filters_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Operand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cases_filters_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cases_filters_proto_msgTypes[1].OneofWrappers = []any{
		(*Operand_Filter)(nil),
		(*Operand_Node)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cases_filters_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cases_filters_proto_goTypes,
		DependencyIndexes: file_cases_filters_proto_depIdxs,
		EnumInfos:         file_cases_filters_proto_enumTypes,
		MessageInfos:      file_cases_filters_proto_msgTypes,
	}.Build()
	File_cases_filters_proto = out.File
	file_cases_filters_proto_rawDesc = nil
	file_cases_filters_proto_goTypes = nil
	file_cases_filters_proto_depIdxs = nil
}
