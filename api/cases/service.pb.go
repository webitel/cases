// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: service.proto

package cases

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "github.com/webitel/webitel-go-kit/cmd/protoc-gen-go-webitel/gen/go/proto/webitel"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/googleapis/api/visibility"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Service message represents a service entity within a catalog
type Service struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for the service
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name of the service
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// ID of the parent catalog
	RootId int64 `protobuf:"varint,3,opt,name=root_id,json=rootId,proto3" json:"root_id,omitempty"`
	// Description of the service (optional)
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Code for external integrations (optional)
	Code string `protobuf:"bytes,5,opt,name=code,proto3" json:"code,omitempty"`
	// State of the service (true for active, false for inactive)
	State bool `protobuf:"varint,6,opt,name=state,proto3" json:"state,omitempty"`
	// SLA associated with the service
	Sla *Lookup `protobuf:"bytes,7,opt,name=sla,proto3" json:"sla,omitempty"`
	// Group responsible for the service
	Group *ExtendedLookup `protobuf:"bytes,8,opt,name=group,proto3" json:"group,omitempty"`
	// Assignee responsible for the service
	Assignee *Lookup `protobuf:"bytes,9,opt,name=assignee,proto3" json:"assignee,omitempty"`
	// Timestamp when the service was created
	CreatedAt int64 `protobuf:"varint,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Timestamp when the service was last updated
	UpdatedAt int64 `protobuf:"varint,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// User who created the service
	CreatedBy *Lookup `protobuf:"bytes,13,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	// User who last updated the service
	UpdatedBy *Lookup `protobuf:"bytes,14,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	// Catalogs associated with the service
	CatalogId int64 `protobuf:"varint,15,opt,name=catalog_id,json=catalogId,proto3" json:"catalog_id,omitempty"`
	// Service associated with the service
	Service []*Service `protobuf:"bytes,16,rep,name=service,proto3" json:"service,omitempty"`
	// flag showing whether the catalog was searched
	Searched      bool `protobuf:"varint,17,opt,name=searched,proto3" json:"searched,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Service) Reset() {
	*x = Service{}
	mi := &file_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service) ProtoMessage() {}

func (x *Service) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service.ProtoReflect.Descriptor instead.
func (*Service) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{0}
}

func (x *Service) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Service) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Service) GetRootId() int64 {
	if x != nil {
		return x.RootId
	}
	return 0
}

func (x *Service) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Service) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Service) GetState() bool {
	if x != nil {
		return x.State
	}
	return false
}

func (x *Service) GetSla() *Lookup {
	if x != nil {
		return x.Sla
	}
	return nil
}

func (x *Service) GetGroup() *ExtendedLookup {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *Service) GetAssignee() *Lookup {
	if x != nil {
		return x.Assignee
	}
	return nil
}

func (x *Service) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Service) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Service) GetCreatedBy() *Lookup {
	if x != nil {
		return x.CreatedBy
	}
	return nil
}

func (x *Service) GetUpdatedBy() *Lookup {
	if x != nil {
		return x.UpdatedBy
	}
	return nil
}

func (x *Service) GetCatalogId() int64 {
	if x != nil {
		return x.CatalogId
	}
	return 0
}

func (x *Service) GetService() []*Service {
	if x != nil {
		return x.Service
	}
	return nil
}

func (x *Service) GetSearched() bool {
	if x != nil {
		return x.Searched
	}
	return false
}

// ServiceList message contains a list of services with pagination
type ServiceList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Page number for pagination
	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	// Indicates if there are more pages
	Next bool `protobuf:"varint,2,opt,name=next,proto3" json:"next,omitempty"`
	// List of service items
	Items         []*Service `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceList) Reset() {
	*x = ServiceList{}
	mi := &file_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceList) ProtoMessage() {}

func (x *ServiceList) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceList.ProtoReflect.Descriptor instead.
func (*ServiceList) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{1}
}

func (x *ServiceList) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ServiceList) GetNext() bool {
	if x != nil {
		return x.Next
	}
	return false
}

func (x *ServiceList) GetItems() []*Service {
	if x != nil {
		return x.Items
	}
	return nil
}

// InputService message contains the fields for creating or updating a service
type InputService struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the service (required)
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The parent catalog (required)
	CatalogId int64 `protobuf:"varint,2,opt,name=catalog_id,json=catalogId,proto3" json:"catalog_id,omitempty"`
	// Description of the service (optional)
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Code for external integrations (optional)
	Code string `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	// State of the service (true for active, false for inactive)
	State bool `protobuf:"varint,5,opt,name=state,proto3" json:"state,omitempty"`
	// SLA ID associated with the service
	Sla *Lookup `protobuf:"bytes,6,opt,name=sla,proto3" json:"sla,omitempty"`
	// Group ID responsible for the service
	Group *ExtendedLookup `protobuf:"bytes,7,opt,name=group,proto3" json:"group,omitempty"`
	// Assignee ID responsible for the service
	Assignee *Lookup `protobuf:"bytes,8,opt,name=assignee,proto3" json:"assignee,omitempty"`
	// ID of the root catalog
	RootId        int64 `protobuf:"varint,9,opt,name=root_id,json=rootId,proto3" json:"root_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InputService) Reset() {
	*x = InputService{}
	mi := &file_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InputService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputService) ProtoMessage() {}

func (x *InputService) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputService.ProtoReflect.Descriptor instead.
func (*InputService) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{2}
}

func (x *InputService) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InputService) GetCatalogId() int64 {
	if x != nil {
		return x.CatalogId
	}
	return 0
}

func (x *InputService) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *InputService) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *InputService) GetState() bool {
	if x != nil {
		return x.State
	}
	return false
}

func (x *InputService) GetSla() *Lookup {
	if x != nil {
		return x.Sla
	}
	return nil
}

func (x *InputService) GetGroup() *ExtendedLookup {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *InputService) GetAssignee() *Lookup {
	if x != nil {
		return x.Assignee
	}
	return nil
}

func (x *InputService) GetRootId() int64 {
	if x != nil {
		return x.RootId
	}
	return 0
}

type InputCreateService struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the service (required)
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Parent catalog ID (required)
	RootId int64 `protobuf:"varint,2,opt,name=root_id,json=rootId,proto3" json:"root_id,omitempty"`
	// Description of the service (optional)
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Code for external integrations (optional)
	Code string `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	// State of the service (true for active, false for inactive)
	State bool `protobuf:"varint,5,opt,name=state,proto3" json:"state,omitempty"`
	// SLA ID associated with the service
	Sla *Lookup `protobuf:"bytes,6,opt,name=sla,proto3" json:"sla,omitempty"`
	// Group ID responsible for the service
	Group *ExtendedLookup `protobuf:"bytes,7,opt,name=group,proto3" json:"group,omitempty"`
	// Assignee ID responsible for the service
	Assignee *Lookup `protobuf:"bytes,8,opt,name=assignee,proto3" json:"assignee,omitempty"`
	// ID of the root catalog
	CatalogId     int64 `protobuf:"varint,9,opt,name=catalog_id,json=catalogId,proto3" json:"catalog_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InputCreateService) Reset() {
	*x = InputCreateService{}
	mi := &file_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InputCreateService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputCreateService) ProtoMessage() {}

func (x *InputCreateService) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputCreateService.ProtoReflect.Descriptor instead.
func (*InputCreateService) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{3}
}

func (x *InputCreateService) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InputCreateService) GetRootId() int64 {
	if x != nil {
		return x.RootId
	}
	return 0
}

func (x *InputCreateService) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *InputCreateService) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *InputCreateService) GetState() bool {
	if x != nil {
		return x.State
	}
	return false
}

func (x *InputCreateService) GetSla() *Lookup {
	if x != nil {
		return x.Sla
	}
	return nil
}

func (x *InputCreateService) GetGroup() *ExtendedLookup {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *InputCreateService) GetAssignee() *Lookup {
	if x != nil {
		return x.Assignee
	}
	return nil
}

func (x *InputCreateService) GetCatalogId() int64 {
	if x != nil {
		return x.CatalogId
	}
	return 0
}

// CreateServiceRequest message for creating a new service
type CreateServiceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Input         *InputCreateService    `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	Fields        []string               `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateServiceRequest) Reset() {
	*x = CreateServiceRequest{}
	mi := &file_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServiceRequest) ProtoMessage() {}

func (x *CreateServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServiceRequest.ProtoReflect.Descriptor instead.
func (*CreateServiceRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreateServiceRequest) GetInput() *InputCreateService {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *CreateServiceRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

// UpdateServiceRequest message for updating an existing service
type UpdateServiceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the service to be updated
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Input data for updating the service
	Input  *InputService `protobuf:"bytes,2,opt,name=input,proto3" json:"input,omitempty"`
	Fields []string      `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"`
	// ---- JSON PATCH fields mask ----
	XJsonMask     []string `protobuf:"bytes,4,rep,name=x_json_mask,json=xJsonMask,proto3" json:"x_json_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateServiceRequest) Reset() {
	*x = UpdateServiceRequest{}
	mi := &file_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServiceRequest) ProtoMessage() {}

func (x *UpdateServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServiceRequest.ProtoReflect.Descriptor instead.
func (*UpdateServiceRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateServiceRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateServiceRequest) GetInput() *InputService {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *UpdateServiceRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *UpdateServiceRequest) GetXJsonMask() []string {
	if x != nil {
		return x.XJsonMask
	}
	return nil
}

// DeleteServiceRequest message for deleting a service
type DeleteServiceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the service to be deleted
	Id            []int64 `protobuf:"varint,1,rep,packed,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteServiceRequest) Reset() {
	*x = DeleteServiceRequest{}
	mi := &file_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteServiceRequest) ProtoMessage() {}

func (x *DeleteServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteServiceRequest.ProtoReflect.Descriptor instead.
func (*DeleteServiceRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteServiceRequest) GetId() []int64 {
	if x != nil {
		return x.Id
	}
	return nil
}

// ListServiceRequest message for listing services within a catalog
type ListServiceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Page number for pagination
	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	// Number of records per page
	Size int32 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	// Sorting options by fields
	Sort string `protobuf:"bytes,3,opt,name=sort,proto3" json:"sort,omitempty"`
	// List of IDs to filter the services
	Id []int64 `protobuf:"varint,4,rep,packed,name=id,proto3" json:"id,omitempty"`
	// Search query string for filtering by name. Supports:
	// - Wildcards (*) for substring matching
	// - Placeholder (?) for single character substitution
	// - Exact match for full names
	Q string `protobuf:"bytes,5,opt,name=q,proto3" json:"q,omitempty"`
	// Filter services by catalog ID (required)
	RootId int64 `protobuf:"varint,6,opt,name=root_id,json=rootId,proto3" json:"root_id,omitempty"`
	// Filter by state (true for active, false for inactive)
	State bool `protobuf:"varint,7,opt,name=state,proto3" json:"state,omitempty"`
	// Fields to be retrieved as a result.
	Fields        []string `protobuf:"bytes,8,rep,name=fields,proto3" json:"fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListServiceRequest) Reset() {
	*x = ListServiceRequest{}
	mi := &file_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceRequest) ProtoMessage() {}

func (x *ListServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceRequest.ProtoReflect.Descriptor instead.
func (*ListServiceRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{7}
}

func (x *ListServiceRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListServiceRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListServiceRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *ListServiceRequest) GetId() []int64 {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ListServiceRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *ListServiceRequest) GetRootId() int64 {
	if x != nil {
		return x.RootId
	}
	return 0
}

func (x *ListServiceRequest) GetState() bool {
	if x != nil {
		return x.State
	}
	return false
}

func (x *ListServiceRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

// LocateServiceRequest message for locating a specific service by ID
type LocateServiceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the service to be located
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Fields to be retrieved as a result.
	Fields        []string `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocateServiceRequest) Reset() {
	*x = LocateServiceRequest{}
	mi := &file_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocateServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocateServiceRequest) ProtoMessage() {}

func (x *LocateServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocateServiceRequest.ProtoReflect.Descriptor instead.
func (*LocateServiceRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{8}
}

func (x *LocateServiceRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LocateServiceRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

// LocateServiceResponse message contains a single service entity
type LocateServiceResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The located service
	Service       *Service `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocateServiceResponse) Reset() {
	*x = LocateServiceResponse{}
	mi := &file_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocateServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocateServiceResponse) ProtoMessage() {}

func (x *LocateServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocateServiceResponse.ProtoReflect.Descriptor instead.
func (*LocateServiceResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{9}
}

func (x *LocateServiceResponse) GetService() *Service {
	if x != nil {
		return x.Service
	}
	return nil
}

var File_service_proto protoreflect.FileDescriptor

const file_service_proto_rawDesc = "" +
	"\n" +
	"\rservice.proto\x12\rwebitel.cases\x1a\rgeneral.proto\x1a\x1bgoogle/api/visibility.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1aproto/webitel/option.proto\"\x9c\x04\n" +
	"\aService\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x17\n" +
	"\aroot_id\x18\x03 \x01(\x03R\x06rootId\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x12\n" +
	"\x04code\x18\x05 \x01(\tR\x04code\x12\x14\n" +
	"\x05state\x18\x06 \x01(\bR\x05state\x12!\n" +
	"\x03sla\x18\a \x01(\v2\x0f.general.LookupR\x03sla\x12-\n" +
	"\x05group\x18\b \x01(\v2\x17.general.ExtendedLookupR\x05group\x12+\n" +
	"\bassignee\x18\t \x01(\v2\x0f.general.LookupR\bassignee\x12\x1d\n" +
	"\n" +
	"created_at\x18\v \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\f \x01(\x03R\tupdatedAt\x12.\n" +
	"\n" +
	"created_by\x18\r \x01(\v2\x0f.general.LookupR\tcreatedBy\x12.\n" +
	"\n" +
	"updated_by\x18\x0e \x01(\v2\x0f.general.LookupR\tupdatedBy\x12\x1d\n" +
	"\n" +
	"catalog_id\x18\x0f \x01(\x03R\tcatalogId\x120\n" +
	"\aservice\x18\x10 \x03(\v2\x16.webitel.cases.ServiceR\aservice\x12\x1a\n" +
	"\bsearched\x18\x11 \x01(\bR\bsearched\"c\n" +
	"\vServiceList\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x05R\x04page\x12\x12\n" +
	"\x04next\x18\x02 \x01(\bR\x04next\x12,\n" +
	"\x05items\x18\x03 \x03(\v2\x16.webitel.cases.ServiceR\x05items\"\xa5\x02\n" +
	"\fInputService\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"catalog_id\x18\x02 \x01(\x03R\tcatalogId\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x12\n" +
	"\x04code\x18\x04 \x01(\tR\x04code\x12\x14\n" +
	"\x05state\x18\x05 \x01(\bR\x05state\x12!\n" +
	"\x03sla\x18\x06 \x01(\v2\x0f.general.LookupR\x03sla\x12-\n" +
	"\x05group\x18\a \x01(\v2\x17.general.ExtendedLookupR\x05group\x12+\n" +
	"\bassignee\x18\b \x01(\v2\x0f.general.LookupR\bassignee\x12\x17\n" +
	"\aroot_id\x18\t \x01(\x03R\x06rootId\"\xab\x02\n" +
	"\x12InputCreateService\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x17\n" +
	"\aroot_id\x18\x02 \x01(\x03R\x06rootId\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x12\n" +
	"\x04code\x18\x04 \x01(\tR\x04code\x12\x14\n" +
	"\x05state\x18\x05 \x01(\bR\x05state\x12!\n" +
	"\x03sla\x18\x06 \x01(\v2\x0f.general.LookupR\x03sla\x12-\n" +
	"\x05group\x18\a \x01(\v2\x17.general.ExtendedLookupR\x05group\x12+\n" +
	"\bassignee\x18\b \x01(\v2\x0f.general.LookupR\bassignee\x12\x1d\n" +
	"\n" +
	"catalog_id\x18\t \x01(\x03R\tcatalogId\"g\n" +
	"\x14CreateServiceRequest\x127\n" +
	"\x05input\x18\x01 \x01(\v2!.webitel.cases.InputCreateServiceR\x05input\x12\x16\n" +
	"\x06fields\x18\x02 \x03(\tR\x06fields\"\xac\x01\n" +
	"\x14UpdateServiceRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x121\n" +
	"\x05input\x18\x02 \x01(\v2\x1b.webitel.cases.InputServiceR\x05input\x12\x16\n" +
	"\x06fields\x18\x03 \x03(\tR\x06fields\x129\n" +
	"\vx_json_mask\x18\x04 \x03(\tB\x19\x92A\a@\x01\x8a\x01\x02^$\xfa\xd2\xe4\x93\x02\t\x12\aPREVIEWR\txJsonMask\"&\n" +
	"\x14DeleteServiceRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x03(\x03R\x02id\"\xb5\x01\n" +
	"\x12ListServiceRequest\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x05R\x04page\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x05R\x04size\x12\x12\n" +
	"\x04sort\x18\x03 \x01(\tR\x04sort\x12\x0e\n" +
	"\x02id\x18\x04 \x03(\x03R\x02id\x12\f\n" +
	"\x01q\x18\x05 \x01(\tR\x01q\x12\x17\n" +
	"\aroot_id\x18\x06 \x01(\x03R\x06rootId\x12\x14\n" +
	"\x05state\x18\a \x01(\bR\x05state\x12\x16\n" +
	"\x06fields\x18\b \x03(\tR\x06fields\">\n" +
	"\x14LocateServiceRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x16\n" +
	"\x06fields\x18\x02 \x03(\tR\x06fields\"I\n" +
	"\x15LocateServiceResponse\x120\n" +
	"\aservice\x18\x01 \x01(\v2\x16.webitel.cases.ServiceR\aservice2\xc4\x06\n" +
	"\bServices\x12\xae\x01\n" +
	"\fListServices\x12!.webitel.cases.ListServiceRequest\x1a\x1a.webitel.cases.ServiceList\"_\x92AA\x12?Retrieve a list of services or search services within a catalog\x90\xb5\x18\x01\x82\xd3\xe4\x93\x02\x11\x12\x0f/cases/services\x12\x9a\x01\n" +
	"\rCreateService\x12#.webitel.cases.CreateServiceRequest\x1a\x16.webitel.cases.Service\"L\x92A'\x12%Create a new service within a catalog\x90\xb5\x18\x02\x82\xd3\xe4\x93\x02\x18:\x05input\"\x0f/cases/services\x12\xb3\x01\n" +
	"\rUpdateService\x12#.webitel.cases.UpdateServiceRequest\x1a\x16.webitel.cases.Service\"e\x92A\x1c\x12\x1aUpdate an existing service\x90\xb5\x18\x02\x82\xd3\xe4\x93\x02<:\x05inputZ\x1d:\x05input2\x14/cases/services/{id}\x1a\x14/cases/services/{id}\x12\x87\x01\n" +
	"\rDeleteService\x12#.webitel.cases.DeleteServiceRequest\x1a\x1a.webitel.cases.ServiceList\"5\x92A\x12\x12\x10Delete a service\x90\xb5\x18\x02\x82\xd3\xe4\x93\x02\x16*\x14/cases/services/{id}\x12\x97\x01\n" +
	"\rLocateService\x12#.webitel.cases.LocateServiceRequest\x1a$.webitel.cases.LocateServiceResponse\";\x92A\x18\x12\x16Locate a service by ID\x90\xb5\x18\x01\x82\xd3\xe4\x93\x02\x16\x12\x14/cases/services/{id}\x1a\x10\x8a\xb5\x18\fcase_lookupsB\xa0\x01\n" +
	"\x11com.webitel.casesB\fServiceProtoP\x01Z(github.com/webitel/cases/api/cases;cases\xa2\x02\x03WCX\xaa\x02\rWebitel.Cases\xca\x02\rWebitel\\Cases\xe2\x02\x19Webitel\\Cases\\GPBMetadata\xea\x02\x0eWebitel::Casesb\x06proto3"

var (
	file_service_proto_rawDescOnce sync.Once
	file_service_proto_rawDescData []byte
)

func file_service_proto_rawDescGZIP() []byte {
	file_service_proto_rawDescOnce.Do(func() {
		file_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_service_proto_rawDesc), len(file_service_proto_rawDesc)))
	})
	return file_service_proto_rawDescData
}

var file_service_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_service_proto_goTypes = []any{
	(*Service)(nil),               // 0: webitel.cases.Service
	(*ServiceList)(nil),           // 1: webitel.cases.ServiceList
	(*InputService)(nil),          // 2: webitel.cases.InputService
	(*InputCreateService)(nil),    // 3: webitel.cases.InputCreateService
	(*CreateServiceRequest)(nil),  // 4: webitel.cases.CreateServiceRequest
	(*UpdateServiceRequest)(nil),  // 5: webitel.cases.UpdateServiceRequest
	(*DeleteServiceRequest)(nil),  // 6: webitel.cases.DeleteServiceRequest
	(*ListServiceRequest)(nil),    // 7: webitel.cases.ListServiceRequest
	(*LocateServiceRequest)(nil),  // 8: webitel.cases.LocateServiceRequest
	(*LocateServiceResponse)(nil), // 9: webitel.cases.LocateServiceResponse
	(*Lookup)(nil),                // 10: general.Lookup
	(*ExtendedLookup)(nil),        // 11: general.ExtendedLookup
}
var file_service_proto_depIdxs = []int32{
	10, // 0: webitel.cases.Service.sla:type_name -> general.Lookup
	11, // 1: webitel.cases.Service.group:type_name -> general.ExtendedLookup
	10, // 2: webitel.cases.Service.assignee:type_name -> general.Lookup
	10, // 3: webitel.cases.Service.created_by:type_name -> general.Lookup
	10, // 4: webitel.cases.Service.updated_by:type_name -> general.Lookup
	0,  // 5: webitel.cases.Service.service:type_name -> webitel.cases.Service
	0,  // 6: webitel.cases.ServiceList.items:type_name -> webitel.cases.Service
	10, // 7: webitel.cases.InputService.sla:type_name -> general.Lookup
	11, // 8: webitel.cases.InputService.group:type_name -> general.ExtendedLookup
	10, // 9: webitel.cases.InputService.assignee:type_name -> general.Lookup
	10, // 10: webitel.cases.InputCreateService.sla:type_name -> general.Lookup
	11, // 11: webitel.cases.InputCreateService.group:type_name -> general.ExtendedLookup
	10, // 12: webitel.cases.InputCreateService.assignee:type_name -> general.Lookup
	3,  // 13: webitel.cases.CreateServiceRequest.input:type_name -> webitel.cases.InputCreateService
	2,  // 14: webitel.cases.UpdateServiceRequest.input:type_name -> webitel.cases.InputService
	0,  // 15: webitel.cases.LocateServiceResponse.service:type_name -> webitel.cases.Service
	7,  // 16: webitel.cases.Services.ListServices:input_type -> webitel.cases.ListServiceRequest
	4,  // 17: webitel.cases.Services.CreateService:input_type -> webitel.cases.CreateServiceRequest
	5,  // 18: webitel.cases.Services.UpdateService:input_type -> webitel.cases.UpdateServiceRequest
	6,  // 19: webitel.cases.Services.DeleteService:input_type -> webitel.cases.DeleteServiceRequest
	8,  // 20: webitel.cases.Services.LocateService:input_type -> webitel.cases.LocateServiceRequest
	1,  // 21: webitel.cases.Services.ListServices:output_type -> webitel.cases.ServiceList
	0,  // 22: webitel.cases.Services.CreateService:output_type -> webitel.cases.Service
	0,  // 23: webitel.cases.Services.UpdateService:output_type -> webitel.cases.Service
	1,  // 24: webitel.cases.Services.DeleteService:output_type -> webitel.cases.ServiceList
	9,  // 25: webitel.cases.Services.LocateService:output_type -> webitel.cases.LocateServiceResponse
	21, // [21:26] is the sub-list for method output_type
	16, // [16:21] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_service_proto_init() }
func file_service_proto_init() {
	if File_service_proto != nil {
		return
	}
	file_general_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_service_proto_rawDesc), len(file_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_proto_goTypes,
		DependencyIndexes: file_service_proto_depIdxs,
		MessageInfos:      file_service_proto_msgTypes,
	}.Build()
	File_service_proto = out.File
	file_service_proto_goTypes = nil
	file_service_proto_depIdxs = nil
}
