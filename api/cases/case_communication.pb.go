// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.0
// 	protoc        (unknown)
// source: case_communication.proto

package cases

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "github.com/webitel/webitel-go-kit/cmd/protoc-gen-go-webitel/gen/go/proto/webitel"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/googleapis/api/visibility"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CaseCommunicationsTypes int32

const (
	CaseCommunicationsTypes_NO_TYPE             CaseCommunicationsTypes = 0
	CaseCommunicationsTypes_COMMUNICATION_CHAT  CaseCommunicationsTypes = 1
	CaseCommunicationsTypes_COMMUNICATION_CALL  CaseCommunicationsTypes = 2
	CaseCommunicationsTypes_COMMUNICATION_EMAIL CaseCommunicationsTypes = 3
)

// Enum value maps for CaseCommunicationsTypes.
var (
	CaseCommunicationsTypes_name = map[int32]string{
		0: "NO_TYPE",
		1: "COMMUNICATION_CHAT",
		2: "COMMUNICATION_CALL",
		3: "COMMUNICATION_EMAIL",
	}
	CaseCommunicationsTypes_value = map[string]int32{
		"NO_TYPE":             0,
		"COMMUNICATION_CHAT":  1,
		"COMMUNICATION_CALL":  2,
		"COMMUNICATION_EMAIL": 3,
	}
)

func (x CaseCommunicationsTypes) Enum() *CaseCommunicationsTypes {
	p := new(CaseCommunicationsTypes)
	*p = x
	return p
}

func (x CaseCommunicationsTypes) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CaseCommunicationsTypes) Descriptor() protoreflect.EnumDescriptor {
	return file_case_communication_proto_enumTypes[0].Descriptor()
}

func (CaseCommunicationsTypes) Type() protoreflect.EnumType {
	return &file_case_communication_proto_enumTypes[0]
}

func (x CaseCommunicationsTypes) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CaseCommunicationsTypes.Descriptor instead.
func (CaseCommunicationsTypes) EnumDescriptor() ([]byte, []int) {
	return file_case_communication_proto_rawDescGZIP(), []int{0}
}

type CaseCommunication struct {
	state             protoimpl.MessageState  `protogen:"open.v1"`
	Etag              string                  `protobuf:"bytes,1,opt,name=etag,proto3" json:"etag,omitempty"`
	Id                int64                   `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Ver               int32                   `protobuf:"varint,3,opt,name=ver,proto3" json:"ver,omitempty"`
	CommunicationType CaseCommunicationsTypes `protobuf:"varint,4,opt,name=communication_type,json=communicationType,proto3,enum=webitel.cases.CaseCommunicationsTypes" json:"communication_type,omitempty"`
	CommunicationId   string                  `protobuf:"bytes,5,opt,name=communication_id,json=communicationId,proto3" json:"communication_id,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CaseCommunication) Reset() {
	*x = CaseCommunication{}
	mi := &file_case_communication_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CaseCommunication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaseCommunication) ProtoMessage() {}

func (x *CaseCommunication) ProtoReflect() protoreflect.Message {
	mi := &file_case_communication_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaseCommunication.ProtoReflect.Descriptor instead.
func (*CaseCommunication) Descriptor() ([]byte, []int) {
	return file_case_communication_proto_rawDescGZIP(), []int{0}
}

func (x *CaseCommunication) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

func (x *CaseCommunication) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CaseCommunication) GetVer() int32 {
	if x != nil {
		return x.Ver
	}
	return 0
}

func (x *CaseCommunication) GetCommunicationType() CaseCommunicationsTypes {
	if x != nil {
		return x.CommunicationType
	}
	return CaseCommunicationsTypes_NO_TYPE
}

func (x *CaseCommunication) GetCommunicationId() string {
	if x != nil {
		return x.CommunicationId
	}
	return ""
}

type InputCaseCommunication struct {
	state             protoimpl.MessageState  `protogen:"open.v1"`
	CommunicationType CaseCommunicationsTypes `protobuf:"varint,2,opt,name=communication_type,json=communicationType,proto3,enum=webitel.cases.CaseCommunicationsTypes" json:"communication_type,omitempty"`
	CommunicationId   string                  `protobuf:"bytes,3,opt,name=communication_id,json=communicationId,proto3" json:"communication_id,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *InputCaseCommunication) Reset() {
	*x = InputCaseCommunication{}
	mi := &file_case_communication_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InputCaseCommunication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputCaseCommunication) ProtoMessage() {}

func (x *InputCaseCommunication) ProtoReflect() protoreflect.Message {
	mi := &file_case_communication_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputCaseCommunication.ProtoReflect.Descriptor instead.
func (*InputCaseCommunication) Descriptor() ([]byte, []int) {
	return file_case_communication_proto_rawDescGZIP(), []int{1}
}

func (x *InputCaseCommunication) GetCommunicationType() CaseCommunicationsTypes {
	if x != nil {
		return x.CommunicationType
	}
	return CaseCommunicationsTypes_NO_TYPE
}

func (x *InputCaseCommunication) GetCommunicationId() string {
	if x != nil {
		return x.CommunicationId
	}
	return ""
}

type LinkCommunicationRequest struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	CaseEtag      string                    `protobuf:"bytes,1,opt,name=case_etag,json=caseEtag,proto3" json:"case_etag,omitempty"`
	Fields        []string                  `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
	Input         []*InputCaseCommunication `protobuf:"bytes,3,rep,name=input,proto3" json:"input,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LinkCommunicationRequest) Reset() {
	*x = LinkCommunicationRequest{}
	mi := &file_case_communication_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LinkCommunicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkCommunicationRequest) ProtoMessage() {}

func (x *LinkCommunicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_case_communication_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkCommunicationRequest.ProtoReflect.Descriptor instead.
func (*LinkCommunicationRequest) Descriptor() ([]byte, []int) {
	return file_case_communication_proto_rawDescGZIP(), []int{2}
}

func (x *LinkCommunicationRequest) GetCaseEtag() string {
	if x != nil {
		return x.CaseEtag
	}
	return ""
}

func (x *LinkCommunicationRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *LinkCommunicationRequest) GetInput() []*InputCaseCommunication {
	if x != nil {
		return x.Input
	}
	return nil
}

type LinkCommunicationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []*CaseCommunication   `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LinkCommunicationResponse) Reset() {
	*x = LinkCommunicationResponse{}
	mi := &file_case_communication_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LinkCommunicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkCommunicationResponse) ProtoMessage() {}

func (x *LinkCommunicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_case_communication_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkCommunicationResponse.ProtoReflect.Descriptor instead.
func (*LinkCommunicationResponse) Descriptor() ([]byte, []int) {
	return file_case_communication_proto_rawDescGZIP(), []int{3}
}

func (x *LinkCommunicationResponse) GetData() []*CaseCommunication {
	if x != nil {
		return x.Data
	}
	return nil
}

type UnlinkCommunicationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Etag          string                 `protobuf:"bytes,1,opt,name=etag,proto3" json:"etag,omitempty"`
	Fields        []string               `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnlinkCommunicationRequest) Reset() {
	*x = UnlinkCommunicationRequest{}
	mi := &file_case_communication_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlinkCommunicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlinkCommunicationRequest) ProtoMessage() {}

func (x *UnlinkCommunicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_case_communication_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlinkCommunicationRequest.ProtoReflect.Descriptor instead.
func (*UnlinkCommunicationRequest) Descriptor() ([]byte, []int) {
	return file_case_communication_proto_rawDescGZIP(), []int{4}
}

func (x *UnlinkCommunicationRequest) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

func (x *UnlinkCommunicationRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

type UnlinkCommunicationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *CaseCommunication     `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnlinkCommunicationResponse) Reset() {
	*x = UnlinkCommunicationResponse{}
	mi := &file_case_communication_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlinkCommunicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlinkCommunicationResponse) ProtoMessage() {}

func (x *UnlinkCommunicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_case_communication_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlinkCommunicationResponse.ProtoReflect.Descriptor instead.
func (*UnlinkCommunicationResponse) Descriptor() ([]byte, []int) {
	return file_case_communication_proto_rawDescGZIP(), []int{5}
}

func (x *UnlinkCommunicationResponse) GetData() *CaseCommunication {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_case_communication_proto protoreflect.FileDescriptor

var file_case_communication_proto_rawDesc = []byte{
	0x0a, 0x18, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x77, 0x65, 0x62, 0x69,
	0x74, 0x65, 0x6c, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x73, 0x1a, 0x0d, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcb, 0x01, 0x0a, 0x11, 0x43, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x74,
	0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x74, 0x61, 0x67, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x76, 0x65, 0x72,
	0x12, 0x55, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x77,
	0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x73,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x9a, 0x01, 0x0a, 0x16, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x43, 0x61, 0x73, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x55, 0x0a,
	0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x77, 0x65, 0x62, 0x69,
	0x74, 0x65, 0x6c, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x73, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0x8c, 0x01, 0x0a, 0x18, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x61, 0x73, 0x65, 0x5f, 0x65, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x61, 0x73, 0x65, 0x45, 0x74, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x12, 0x3b, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x73,
	0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x43, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x51,
	0x0a, 0x19, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x77, 0x65, 0x62, 0x69,
	0x74, 0x65, 0x6c, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x73, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x48, 0x0a, 0x1a, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x65, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65,
	0x74, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x53, 0x0a, 0x1b, 0x55,
	0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x77, 0x65, 0x62, 0x69, 0x74,
	0x65, 0x6c, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x2a, 0x6f, 0x0a, 0x17, 0x43, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x4e,
	0x4f, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f, 0x4d, 0x4d,
	0x55, 0x4e, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x48, 0x41, 0x54, 0x10, 0x01,
	0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f, 0x4d, 0x4d, 0x55, 0x4e, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x43, 0x41, 0x4c, 0x4c, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x4f, 0x4d, 0x4d,
	0x55, 0x4e, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x10,
	0x03, 0x32, 0xda, 0x02, 0x0a, 0x12, 0x43, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x94, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x6e,
	0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27,
	0x2e, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2e, 0x4c,
	0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65,
	0x6c, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x2c, 0x90, 0xb5, 0x18, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x22, 0x20, 0x2f,
	0x63, 0x61, 0x73, 0x65, 0x73, 0x2f, 0x7b, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x65, 0x74, 0x61, 0x67,
	0x7d, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0xa1, 0x01, 0x0a, 0x13, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x2e, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65,
	0x6c, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2e, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x43, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x61, 0x73,
	0x65, 0x73, 0x2e, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33,
	0x90, 0xb5, 0x18, 0x02, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x2a, 0x27, 0x2f, 0x63, 0x61, 0x73,
	0x65, 0x73, 0x2f, 0x7b, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x65, 0x74, 0x61, 0x67, 0x7d, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x65, 0x74,
	0x61, 0x67, 0x7d, 0x1a, 0x09, 0x8a, 0xb5, 0x18, 0x05, 0x63, 0x61, 0x73, 0x65, 0x73, 0x42, 0xaa,
	0x01, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63,
	0x61, 0x73, 0x65, 0x73, 0x42, 0x16, 0x43, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x28,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x65, 0x62, 0x69, 0x74,
	0x65, 0x6c, 0x2f, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x61, 0x73,
	0x65, 0x73, 0x3b, 0x63, 0x61, 0x73, 0x65, 0x73, 0xa2, 0x02, 0x03, 0x57, 0x43, 0x58, 0xaa, 0x02,
	0x0d, 0x57, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x43, 0x61, 0x73, 0x65, 0x73, 0xca, 0x02,
	0x0d, 0x57, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x5c, 0x43, 0x61, 0x73, 0x65, 0x73, 0xe2, 0x02,
	0x19, 0x57, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x5c, 0x43, 0x61, 0x73, 0x65, 0x73, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0e, 0x57, 0x65, 0x62,
	0x69, 0x74, 0x65, 0x6c, 0x3a, 0x3a, 0x43, 0x61, 0x73, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_case_communication_proto_rawDescOnce sync.Once
	file_case_communication_proto_rawDescData = file_case_communication_proto_rawDesc
)

func file_case_communication_proto_rawDescGZIP() []byte {
	file_case_communication_proto_rawDescOnce.Do(func() {
		file_case_communication_proto_rawDescData = protoimpl.X.CompressGZIP(file_case_communication_proto_rawDescData)
	})
	return file_case_communication_proto_rawDescData
}

var file_case_communication_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_case_communication_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_case_communication_proto_goTypes = []any{
	(CaseCommunicationsTypes)(0),        // 0: webitel.cases.CaseCommunicationsTypes
	(*CaseCommunication)(nil),           // 1: webitel.cases.CaseCommunication
	(*InputCaseCommunication)(nil),      // 2: webitel.cases.InputCaseCommunication
	(*LinkCommunicationRequest)(nil),    // 3: webitel.cases.LinkCommunicationRequest
	(*LinkCommunicationResponse)(nil),   // 4: webitel.cases.LinkCommunicationResponse
	(*UnlinkCommunicationRequest)(nil),  // 5: webitel.cases.UnlinkCommunicationRequest
	(*UnlinkCommunicationResponse)(nil), // 6: webitel.cases.UnlinkCommunicationResponse
}
var file_case_communication_proto_depIdxs = []int32{
	0, // 0: webitel.cases.CaseCommunication.communication_type:type_name -> webitel.cases.CaseCommunicationsTypes
	0, // 1: webitel.cases.InputCaseCommunication.communication_type:type_name -> webitel.cases.CaseCommunicationsTypes
	2, // 2: webitel.cases.LinkCommunicationRequest.input:type_name -> webitel.cases.InputCaseCommunication
	1, // 3: webitel.cases.LinkCommunicationResponse.data:type_name -> webitel.cases.CaseCommunication
	1, // 4: webitel.cases.UnlinkCommunicationResponse.data:type_name -> webitel.cases.CaseCommunication
	3, // 5: webitel.cases.CaseCommunications.LinkCommunication:input_type -> webitel.cases.LinkCommunicationRequest
	5, // 6: webitel.cases.CaseCommunications.UnlinkCommunication:input_type -> webitel.cases.UnlinkCommunicationRequest
	4, // 7: webitel.cases.CaseCommunications.LinkCommunication:output_type -> webitel.cases.LinkCommunicationResponse
	6, // 8: webitel.cases.CaseCommunications.UnlinkCommunication:output_type -> webitel.cases.UnlinkCommunicationResponse
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_case_communication_proto_init() }
func file_case_communication_proto_init() {
	if File_case_communication_proto != nil {
		return
	}
	file_general_proto_init()
	file_case_timeline_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_case_communication_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_case_communication_proto_goTypes,
		DependencyIndexes: file_case_communication_proto_depIdxs,
		EnumInfos:         file_case_communication_proto_enumTypes,
		MessageInfos:      file_case_communication_proto_msgTypes,
	}.Build()
	File_case_communication_proto = out.File
	file_case_communication_proto_rawDesc = nil
	file_case_communication_proto_goTypes = nil
	file_case_communication_proto_depIdxs = nil
}
