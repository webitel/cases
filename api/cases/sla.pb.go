// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: sla.proto

package cases

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "github.com/webitel/webitel-go-kit/cmd/protoc-gen-go-webitel/gen/go/proto/webitel"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/googleapis/api/visibility"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SLA message represents an SLA entity with metadata
type SLA struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier of the SLA
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name of the SLA - required
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the SLA - optional
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Validity period for the SLA - optional
	ValidFrom int64 `protobuf:"varint,4,opt,name=valid_from,json=validFrom,proto3" json:"valid_from,omitempty"`
	ValidTo   int64 `protobuf:"varint,5,opt,name=valid_to,json=validTo,proto3" json:"valid_to,omitempty"`
	// Calendar ID from the "Calendars" dictionary - required
	Calendar *Lookup `protobuf:"bytes,6,opt,name=calendar,proto3" json:"calendar,omitempty"`
	// Reaction time - required
	ReactionTime *Timings `protobuf:"bytes,7,opt,name=reaction_time,json=reactionTime,proto3" json:"reaction_time,omitempty"`
	// Resolution time - required
	ResolutionTime *Timings `protobuf:"bytes,8,opt,name=resolution_time,json=resolutionTime,proto3" json:"resolution_time,omitempty"`
	// CreatedAt timestamp of the SLA
	CreatedAt int64 `protobuf:"varint,20,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// UpdatedAt timestamp of the SLA
	UpdatedAt int64 `protobuf:"varint,21,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// CreatedBy user of the SLA
	CreatedBy *Lookup `protobuf:"bytes,22,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	// UpdatedBy user of the SLA
	UpdatedBy            *Lookup `protobuf:"bytes,23,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	ReactionTimeMillis   int64   `protobuf:"varint,50,opt,name=reaction_time_millis,json=reactionTimeMillis,proto3" json:"reaction_time_millis,omitempty"`
	ResolutionTimeMillis int64   `protobuf:"varint,51,opt,name=resolution_time_millis,json=resolutionTimeMillis,proto3" json:"resolution_time_millis,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *SLA) Reset() {
	*x = SLA{}
	mi := &file_sla_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SLA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SLA) ProtoMessage() {}

func (x *SLA) ProtoReflect() protoreflect.Message {
	mi := &file_sla_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SLA.ProtoReflect.Descriptor instead.
func (*SLA) Descriptor() ([]byte, []int) {
	return file_sla_proto_rawDescGZIP(), []int{0}
}

func (x *SLA) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SLA) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SLA) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SLA) GetValidFrom() int64 {
	if x != nil {
		return x.ValidFrom
	}
	return 0
}

func (x *SLA) GetValidTo() int64 {
	if x != nil {
		return x.ValidTo
	}
	return 0
}

func (x *SLA) GetCalendar() *Lookup {
	if x != nil {
		return x.Calendar
	}
	return nil
}

func (x *SLA) GetReactionTime() *Timings {
	if x != nil {
		return x.ReactionTime
	}
	return nil
}

func (x *SLA) GetResolutionTime() *Timings {
	if x != nil {
		return x.ResolutionTime
	}
	return nil
}

func (x *SLA) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SLA) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *SLA) GetCreatedBy() *Lookup {
	if x != nil {
		return x.CreatedBy
	}
	return nil
}

func (x *SLA) GetUpdatedBy() *Lookup {
	if x != nil {
		return x.UpdatedBy
	}
	return nil
}

func (x *SLA) GetReactionTimeMillis() int64 {
	if x != nil {
		return x.ReactionTimeMillis
	}
	return 0
}

func (x *SLA) GetResolutionTimeMillis() int64 {
	if x != nil {
		return x.ResolutionTimeMillis
	}
	return 0
}

type Timings struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Dd            int64                  `protobuf:"varint,1,opt,name=dd,proto3" json:"dd,omitempty"`
	Hh            int64                  `protobuf:"varint,2,opt,name=hh,proto3" json:"hh,omitempty"`
	Mm            int64                  `protobuf:"varint,3,opt,name=mm,proto3" json:"mm,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Timings) Reset() {
	*x = Timings{}
	mi := &file_sla_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Timings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timings) ProtoMessage() {}

func (x *Timings) ProtoReflect() protoreflect.Message {
	mi := &file_sla_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timings.ProtoReflect.Descriptor instead.
func (*Timings) Descriptor() ([]byte, []int) {
	return file_sla_proto_rawDescGZIP(), []int{1}
}

func (x *Timings) GetDd() int64 {
	if x != nil {
		return x.Dd
	}
	return 0
}

func (x *Timings) GetHh() int64 {
	if x != nil {
		return x.Hh
	}
	return 0
}

func (x *Timings) GetMm() int64 {
	if x != nil {
		return x.Mm
	}
	return 0
}

// InputSLA message for inputting SLA data
type InputSLA struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the SLA
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the SLA
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Validity period for the SLA
	ValidFrom int64 `protobuf:"varint,4,opt,name=valid_from,json=validFrom,proto3" json:"valid_from,omitempty"`
	ValidTo   int64 `protobuf:"varint,5,opt,name=valid_to,json=validTo,proto3" json:"valid_to,omitempty"`
	// Calendar ID from the "Calendars" dictionary
	Calendar *Lookup `protobuf:"bytes,6,opt,name=calendar,proto3" json:"calendar,omitempty"`
	// Reaction time
	ReactionTime *Timings `protobuf:"bytes,7,opt,name=reaction_time,json=reactionTime,proto3" json:"reaction_time,omitempty"`
	// Resolution time
	ResolutionTime *Timings `protobuf:"bytes,8,opt,name=resolution_time,json=resolutionTime,proto3" json:"resolution_time,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *InputSLA) Reset() {
	*x = InputSLA{}
	mi := &file_sla_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InputSLA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputSLA) ProtoMessage() {}

func (x *InputSLA) ProtoReflect() protoreflect.Message {
	mi := &file_sla_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputSLA.ProtoReflect.Descriptor instead.
func (*InputSLA) Descriptor() ([]byte, []int) {
	return file_sla_proto_rawDescGZIP(), []int{2}
}

func (x *InputSLA) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InputSLA) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *InputSLA) GetValidFrom() int64 {
	if x != nil {
		return x.ValidFrom
	}
	return 0
}

func (x *InputSLA) GetValidTo() int64 {
	if x != nil {
		return x.ValidTo
	}
	return 0
}

func (x *InputSLA) GetCalendar() *Lookup {
	if x != nil {
		return x.Calendar
	}
	return nil
}

func (x *InputSLA) GetReactionTime() *Timings {
	if x != nil {
		return x.ReactionTime
	}
	return nil
}

func (x *InputSLA) GetResolutionTime() *Timings {
	if x != nil {
		return x.ResolutionTime
	}
	return nil
}

// SLAList message contains a list of SLA items with pagination
type SLAList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Next          bool                   `protobuf:"varint,2,opt,name=next,proto3" json:"next,omitempty"`
	Items         []*SLA                 `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SLAList) Reset() {
	*x = SLAList{}
	mi := &file_sla_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SLAList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SLAList) ProtoMessage() {}

func (x *SLAList) ProtoReflect() protoreflect.Message {
	mi := &file_sla_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SLAList.ProtoReflect.Descriptor instead.
func (*SLAList) Descriptor() ([]byte, []int) {
	return file_sla_proto_rawDescGZIP(), []int{3}
}

func (x *SLAList) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SLAList) GetNext() bool {
	if x != nil {
		return x.Next
	}
	return false
}

func (x *SLAList) GetItems() []*SLA {
	if x != nil {
		return x.Items
	}
	return nil
}

// CreateSLARequest message for creating a new SLA
type CreateSLARequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Input *InputSLA              `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	// Fields to be retrieved as a result.
	Fields        []string `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSLARequest) Reset() {
	*x = CreateSLARequest{}
	mi := &file_sla_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSLARequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSLARequest) ProtoMessage() {}

func (x *CreateSLARequest) ProtoReflect() protoreflect.Message {
	mi := &file_sla_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSLARequest.ProtoReflect.Descriptor instead.
func (*CreateSLARequest) Descriptor() ([]byte, []int) {
	return file_sla_proto_rawDescGZIP(), []int{4}
}

func (x *CreateSLARequest) GetInput() *InputSLA {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *CreateSLARequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

// UpdateSLARequest message for updating an existing SLA
type UpdateSLARequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Fields to be retrieved as a result.
	Fields []string  `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
	Input  *InputSLA `protobuf:"bytes,3,opt,name=input,proto3" json:"input,omitempty"`
	// ---- JSON PATCH fields mask ----
	// List of JPath fields specified in body(input).
	XJsonMask     []string `protobuf:"bytes,4,rep,name=x_json_mask,json=xJsonMask,proto3" json:"x_json_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSLARequest) Reset() {
	*x = UpdateSLARequest{}
	mi := &file_sla_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSLARequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSLARequest) ProtoMessage() {}

func (x *UpdateSLARequest) ProtoReflect() protoreflect.Message {
	mi := &file_sla_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSLARequest.ProtoReflect.Descriptor instead.
func (*UpdateSLARequest) Descriptor() ([]byte, []int) {
	return file_sla_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateSLARequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateSLARequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *UpdateSLARequest) GetInput() *InputSLA {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *UpdateSLARequest) GetXJsonMask() []string {
	if x != nil {
		return x.XJsonMask
	}
	return nil
}

// DeleteSLARequest message for deleting an existing SLA
type DeleteSLARequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSLARequest) Reset() {
	*x = DeleteSLARequest{}
	mi := &file_sla_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSLARequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSLARequest) ProtoMessage() {}

func (x *DeleteSLARequest) ProtoReflect() protoreflect.Message {
	mi := &file_sla_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSLARequest.ProtoReflect.Descriptor instead.
func (*DeleteSLARequest) Descriptor() ([]byte, []int) {
	return file_sla_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteSLARequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// ListSLARequest message for listing or searching SLAs
type ListSLARequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Page number of result dataset records. offset = (page*size)
	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	// Size count of records on result page. limit = (size++)
	Size int32 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	// Fields to be retrieved as a result.
	Fields []string `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"`
	// Sort the result according to fields.
	Sort string `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort,omitempty"`
	// Filter by unique IDs.
	Id []int64 `protobuf:"varint,5,rep,packed,name=id,proto3" json:"id,omitempty"`
	// Search query string for filtering by name. Supports:
	// - Wildcards (*) for substring matching
	// - Placeholder (?) for single character substitution
	// - Exact match for full names
	Q             string `protobuf:"bytes,6,opt,name=q,proto3" json:"q,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSLARequest) Reset() {
	*x = ListSLARequest{}
	mi := &file_sla_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSLARequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSLARequest) ProtoMessage() {}

func (x *ListSLARequest) ProtoReflect() protoreflect.Message {
	mi := &file_sla_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSLARequest.ProtoReflect.Descriptor instead.
func (*ListSLARequest) Descriptor() ([]byte, []int) {
	return file_sla_proto_rawDescGZIP(), []int{7}
}

func (x *ListSLARequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListSLARequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListSLARequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *ListSLARequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *ListSLARequest) GetId() []int64 {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ListSLARequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

// LocateSLARequest message for locating a specific SLA by ID
type LocateSLARequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Fields        []string               `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocateSLARequest) Reset() {
	*x = LocateSLARequest{}
	mi := &file_sla_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocateSLARequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocateSLARequest) ProtoMessage() {}

func (x *LocateSLARequest) ProtoReflect() protoreflect.Message {
	mi := &file_sla_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocateSLARequest.ProtoReflect.Descriptor instead.
func (*LocateSLARequest) Descriptor() ([]byte, []int) {
	return file_sla_proto_rawDescGZIP(), []int{8}
}

func (x *LocateSLARequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LocateSLARequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

// LocateSLAResponse message contains a single SLA entity
type LocateSLAResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sla           *SLA                   `protobuf:"bytes,1,opt,name=sla,proto3" json:"sla,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocateSLAResponse) Reset() {
	*x = LocateSLAResponse{}
	mi := &file_sla_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocateSLAResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocateSLAResponse) ProtoMessage() {}

func (x *LocateSLAResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sla_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocateSLAResponse.ProtoReflect.Descriptor instead.
func (*LocateSLAResponse) Descriptor() ([]byte, []int) {
	return file_sla_proto_rawDescGZIP(), []int{9}
}

func (x *LocateSLAResponse) GetSla() *SLA {
	if x != nil {
		return x.Sla
	}
	return nil
}

var File_sla_proto protoreflect.FileDescriptor

const file_sla_proto_rawDesc = "" +
	"\n" +
	"\tsla.proto\x12\rwebitel.cases\x1a\rgeneral.proto\x1a\x1bgoogle/api/visibility.proto\x1a\x1cgoogle/api/annotations.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\x1a\x1aproto/webitel/option.proto\"\xb6\x04\n" +
	"\x03SLA\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"valid_from\x18\x04 \x01(\x03R\tvalidFrom\x12\x19\n" +
	"\bvalid_to\x18\x05 \x01(\x03R\avalidTo\x12+\n" +
	"\bcalendar\x18\x06 \x01(\v2\x0f.general.LookupR\bcalendar\x12;\n" +
	"\rreaction_time\x18\a \x01(\v2\x16.webitel.cases.TimingsR\freactionTime\x12?\n" +
	"\x0fresolution_time\x18\b \x01(\v2\x16.webitel.cases.TimingsR\x0eresolutionTime\x12\x1d\n" +
	"\n" +
	"created_at\x18\x14 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x15 \x01(\x03R\tupdatedAt\x12.\n" +
	"\n" +
	"created_by\x18\x16 \x01(\v2\x0f.general.LookupR\tcreatedBy\x12.\n" +
	"\n" +
	"updated_by\x18\x17 \x01(\v2\x0f.general.LookupR\tupdatedBy\x120\n" +
	"\x14reaction_time_millis\x182 \x01(\x03R\x12reactionTimeMillis\x124\n" +
	"\x16resolution_time_millis\x183 \x01(\x03R\x14resolutionTimeMillis\"9\n" +
	"\aTimings\x12\x0e\n" +
	"\x02dd\x18\x01 \x01(\x03R\x02dd\x12\x0e\n" +
	"\x02hh\x18\x02 \x01(\x03R\x02hh\x12\x0e\n" +
	"\x02mm\x18\x03 \x01(\x03R\x02mm\"\xa5\x02\n" +
	"\bInputSLA\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"valid_from\x18\x04 \x01(\x03R\tvalidFrom\x12\x19\n" +
	"\bvalid_to\x18\x05 \x01(\x03R\avalidTo\x12+\n" +
	"\bcalendar\x18\x06 \x01(\v2\x0f.general.LookupR\bcalendar\x12;\n" +
	"\rreaction_time\x18\a \x01(\v2\x16.webitel.cases.TimingsR\freactionTime\x12?\n" +
	"\x0fresolution_time\x18\b \x01(\v2\x16.webitel.cases.TimingsR\x0eresolutionTime\"[\n" +
	"\aSLAList\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x05R\x04page\x12\x12\n" +
	"\x04next\x18\x02 \x01(\bR\x04next\x12(\n" +
	"\x05items\x18\x03 \x03(\v2\x12.webitel.cases.SLAR\x05items\"\x97\x01\n" +
	"\x10CreateSLARequest\x12-\n" +
	"\x05input\x18\x01 \x01(\v2\x17.webitel.cases.InputSLAR\x05input\x12\x16\n" +
	"\x06fields\x18\x02 \x03(\tR\x06fields:<\x92A9\n" +
	"7\xd2\x01\x04name\xd2\x01\vcalendar_id\xd2\x01\rreaction_time\xd2\x01\x0fresolution_time\"\xb0\x01\n" +
	"\x10UpdateSLARequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x16\n" +
	"\x06fields\x18\x02 \x03(\tR\x06fields\x12-\n" +
	"\x05input\x18\x03 \x01(\v2\x17.webitel.cases.InputSLAR\x05input\x129\n" +
	"\vx_json_mask\x18\x04 \x03(\tB\x19\x92A\a@\x01\x8a\x01\x02^$\xfa\xd2\xe4\x93\x02\t\x12\aPREVIEWR\txJsonMask:\n" +
	"\x92A\a\n" +
	"\x05\xd2\x01\x02id\".\n" +
	"\x10DeleteSLARequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id:\n" +
	"\x92A\a\n" +
	"\x05\xd2\x01\x02id\"\x82\x01\n" +
	"\x0eListSLARequest\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x05R\x04page\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x05R\x04size\x12\x16\n" +
	"\x06fields\x18\x03 \x03(\tR\x06fields\x12\x12\n" +
	"\x04sort\x18\x04 \x01(\tR\x04sort\x12\x0e\n" +
	"\x02id\x18\x05 \x03(\x03R\x02id\x12\f\n" +
	"\x01q\x18\x06 \x01(\tR\x01q\":\n" +
	"\x10LocateSLARequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x16\n" +
	"\x06fields\x18\x02 \x03(\tR\x06fields\"9\n" +
	"\x11LocateSLAResponse\x12$\n" +
	"\x03sla\x18\x01 \x01(\v2\x12.webitel.cases.SLAR\x03sla2\xb8\x05\n" +
	"\x04SLAs\x12\x8f\x01\n" +
	"\bListSLAs\x12\x1d.webitel.cases.ListSLARequest\x1a\x16.webitel.cases.SLAList\"L\x92A2\x120Retrieve a list of SLAs or search SLA conditions\x90\xb5\x18\x01\x82\xd3\xe4\x93\x02\r\x12\v/cases/slas\x12u\n" +
	"\tCreateSLA\x12\x1f.webitel.cases.CreateSLARequest\x1a\x12.webitel.cases.SLA\"3\x92A\x12\x12\x10Create a new SLA\x90\xb5\x18\x00\x82\xd3\xe4\x93\x02\x14:\x05input\"\v/cases/slas\x12\x9b\x01\n" +
	"\tUpdateSLA\x12\x1f.webitel.cases.UpdateSLARequest\x1a\x12.webitel.cases.SLA\"Y\x92A\x18\x12\x16Update an existing SLA\x90\xb5\x18\x02\x82\xd3\xe4\x93\x024:\x05inputZ\x19:\x05input2\x10/cases/slas/{id}\x1a\x10/cases/slas/{id}\x12p\n" +
	"\tDeleteSLA\x12\x1f.webitel.cases.DeleteSLARequest\x1a\x12.webitel.cases.SLA\".\x92A\x0f\x12\rDelete an SLA\x90\xb5\x18\x03\x82\xd3\xe4\x93\x02\x12*\x10/cases/slas/{id}\x12\x84\x01\n" +
	"\tLocateSLA\x12\x1f.webitel.cases.LocateSLARequest\x1a .webitel.cases.LocateSLAResponse\"4\x92A\x15\x12\x13Locate an SLA by ID\x90\xb5\x18\x01\x82\xd3\xe4\x93\x02\x12\x12\x10/cases/slas/{id}\x1a\x10\x8a\xb5\x18\fdictionariesB\x9c\x01\n" +
	"\x11com.webitel.casesB\bSlaProtoP\x01Z(github.com/webitel/cases/api/cases;cases\xa2\x02\x03WCX\xaa\x02\rWebitel.Cases\xca\x02\rWebitel\\Cases\xe2\x02\x19Webitel\\Cases\\GPBMetadata\xea\x02\x0eWebitel::Casesb\x06proto3"

var (
	file_sla_proto_rawDescOnce sync.Once
	file_sla_proto_rawDescData []byte
)

func file_sla_proto_rawDescGZIP() []byte {
	file_sla_proto_rawDescOnce.Do(func() {
		file_sla_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sla_proto_rawDesc), len(file_sla_proto_rawDesc)))
	})
	return file_sla_proto_rawDescData
}

var file_sla_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_sla_proto_goTypes = []any{
	(*SLA)(nil),               // 0: webitel.cases.SLA
	(*Timings)(nil),           // 1: webitel.cases.Timings
	(*InputSLA)(nil),          // 2: webitel.cases.InputSLA
	(*SLAList)(nil),           // 3: webitel.cases.SLAList
	(*CreateSLARequest)(nil),  // 4: webitel.cases.CreateSLARequest
	(*UpdateSLARequest)(nil),  // 5: webitel.cases.UpdateSLARequest
	(*DeleteSLARequest)(nil),  // 6: webitel.cases.DeleteSLARequest
	(*ListSLARequest)(nil),    // 7: webitel.cases.ListSLARequest
	(*LocateSLARequest)(nil),  // 8: webitel.cases.LocateSLARequest
	(*LocateSLAResponse)(nil), // 9: webitel.cases.LocateSLAResponse
	(*Lookup)(nil),            // 10: general.Lookup
}
var file_sla_proto_depIdxs = []int32{
	10, // 0: webitel.cases.SLA.calendar:type_name -> general.Lookup
	1,  // 1: webitel.cases.SLA.reaction_time:type_name -> webitel.cases.Timings
	1,  // 2: webitel.cases.SLA.resolution_time:type_name -> webitel.cases.Timings
	10, // 3: webitel.cases.SLA.created_by:type_name -> general.Lookup
	10, // 4: webitel.cases.SLA.updated_by:type_name -> general.Lookup
	10, // 5: webitel.cases.InputSLA.calendar:type_name -> general.Lookup
	1,  // 6: webitel.cases.InputSLA.reaction_time:type_name -> webitel.cases.Timings
	1,  // 7: webitel.cases.InputSLA.resolution_time:type_name -> webitel.cases.Timings
	0,  // 8: webitel.cases.SLAList.items:type_name -> webitel.cases.SLA
	2,  // 9: webitel.cases.CreateSLARequest.input:type_name -> webitel.cases.InputSLA
	2,  // 10: webitel.cases.UpdateSLARequest.input:type_name -> webitel.cases.InputSLA
	0,  // 11: webitel.cases.LocateSLAResponse.sla:type_name -> webitel.cases.SLA
	7,  // 12: webitel.cases.SLAs.ListSLAs:input_type -> webitel.cases.ListSLARequest
	4,  // 13: webitel.cases.SLAs.CreateSLA:input_type -> webitel.cases.CreateSLARequest
	5,  // 14: webitel.cases.SLAs.UpdateSLA:input_type -> webitel.cases.UpdateSLARequest
	6,  // 15: webitel.cases.SLAs.DeleteSLA:input_type -> webitel.cases.DeleteSLARequest
	8,  // 16: webitel.cases.SLAs.LocateSLA:input_type -> webitel.cases.LocateSLARequest
	3,  // 17: webitel.cases.SLAs.ListSLAs:output_type -> webitel.cases.SLAList
	0,  // 18: webitel.cases.SLAs.CreateSLA:output_type -> webitel.cases.SLA
	0,  // 19: webitel.cases.SLAs.UpdateSLA:output_type -> webitel.cases.SLA
	0,  // 20: webitel.cases.SLAs.DeleteSLA:output_type -> webitel.cases.SLA
	9,  // 21: webitel.cases.SLAs.LocateSLA:output_type -> webitel.cases.LocateSLAResponse
	17, // [17:22] is the sub-list for method output_type
	12, // [12:17] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_sla_proto_init() }
func file_sla_proto_init() {
	if File_sla_proto != nil {
		return
	}
	file_general_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sla_proto_rawDesc), len(file_sla_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sla_proto_goTypes,
		DependencyIndexes: file_sla_proto_depIdxs,
		MessageInfos:      file_sla_proto_msgTypes,
	}.Build()
	File_sla_proto = out.File
	file_sla_proto_goTypes = nil
	file_sla_proto_depIdxs = nil
}
