// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: source.proto

package cases

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "github.com/webitel/webitel-go-kit/cmd/protoc-gen-go-webitel/gen/go/proto/webitel"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/googleapis/api/visibility"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents a source type for the source entity.
type SourceType int32

const (
	// Unspecified source type.
	SourceType_TYPE_UNSPECIFIED SourceType = 0
	// Phone call source type.
	SourceType_CALL SourceType = 1
	// Chat source type.
	SourceType_CHAT SourceType = 2
	// Social media source type.
	SourceType_SOCIAL_MEDIA SourceType = 3
	// Email source type.
	SourceType_EMAIL SourceType = 4
	// API source type.
	SourceType_API SourceType = 5
	// Manual source type.
	SourceType_MANUAL SourceType = 6
)

// Enum value maps for SourceType.
var (
	SourceType_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "CALL",
		2: "CHAT",
		3: "SOCIAL_MEDIA",
		4: "EMAIL",
		5: "API",
		6: "MANUAL",
	}
	SourceType_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"CALL":             1,
		"CHAT":             2,
		"SOCIAL_MEDIA":     3,
		"EMAIL":            4,
		"API":              5,
		"MANUAL":           6,
	}
)

func (x SourceType) Enum() *SourceType {
	p := new(SourceType)
	*p = x
	return p
}

func (x SourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_source_proto_enumTypes[0].Descriptor()
}

func (SourceType) Type() protoreflect.EnumType {
	return &file_source_proto_enumTypes[0]
}

func (x SourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SourceType.Descriptor instead.
func (SourceType) EnumDescriptor() ([]byte, []int) {
	return file_source_proto_rawDescGZIP(), []int{0}
}

// Represents a source entity in the contact management system.
type Source struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier of the source.
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Human-readable name of the source.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Optional detailed description of the source.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Source type, representing the category of the data origin.
	Type SourceType `protobuf:"varint,5,opt,name=type,proto3,enum=webitel.cases.SourceType" json:"type,omitempty"`
	// Timestamp of when the source record was created.
	CreatedAt int64 `protobuf:"varint,20,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Timestamp of when the source record was last updated.
	UpdatedAt int64 `protobuf:"varint,21,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// User who created the source record.
	CreatedBy *Lookup `protobuf:"bytes,22,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	// User who last updated the source record.
	UpdatedBy     *Lookup `protobuf:"bytes,23,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Source) Reset() {
	*x = Source{}
	mi := &file_source_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Source) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Source) ProtoMessage() {}

func (x *Source) ProtoReflect() protoreflect.Message {
	mi := &file_source_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Source.ProtoReflect.Descriptor instead.
func (*Source) Descriptor() ([]byte, []int) {
	return file_source_proto_rawDescGZIP(), []int{0}
}

func (x *Source) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Source) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Source) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Source) GetType() SourceType {
	if x != nil {
		return x.Type
	}
	return SourceType_TYPE_UNSPECIFIED
}

func (x *Source) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Source) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Source) GetCreatedBy() *Lookup {
	if x != nil {
		return x.CreatedBy
	}
	return nil
}

func (x *Source) GetUpdatedBy() *Lookup {
	if x != nil {
		return x.UpdatedBy
	}
	return nil
}

// A list of sources.
type SourceList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Page number of the partial result.
	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	// Have more records.
	Next bool `protobuf:"varint,2,opt,name=next,proto3" json:"next,omitempty"`
	// List of sources.
	Items         []*Source `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SourceList) Reset() {
	*x = SourceList{}
	mi := &file_source_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SourceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceList) ProtoMessage() {}

func (x *SourceList) ProtoReflect() protoreflect.Message {
	mi := &file_source_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceList.ProtoReflect.Descriptor instead.
func (*SourceList) Descriptor() ([]byte, []int) {
	return file_source_proto_rawDescGZIP(), []int{1}
}

func (x *SourceList) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SourceList) GetNext() bool {
	if x != nil {
		return x.Next
	}
	return false
}

func (x *SourceList) GetItems() []*Source {
	if x != nil {
		return x.Items
	}
	return nil
}

// Request message for creating a new Source entity with full JSONSchema OpenAPI options
type CreateSourceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Main input payload for the source being created
	Input *InputSource `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	// Optional list of specific fields to return after creation
	Fields        []string `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSourceRequest) Reset() {
	*x = CreateSourceRequest{}
	mi := &file_source_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSourceRequest) ProtoMessage() {}

func (x *CreateSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_source_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSourceRequest.ProtoReflect.Descriptor instead.
func (*CreateSourceRequest) Descriptor() ([]byte, []int) {
	return file_source_proto_rawDescGZIP(), []int{2}
}

func (x *CreateSourceRequest) GetInput() *InputSource {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *CreateSourceRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

// Input structure representing a new Source entity
type InputSource struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Display name for the source
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Optional short description for context
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Type of the source; restrictable to a fixed set of allowed values
	Type          SourceType `protobuf:"varint,3,opt,name=type,proto3,enum=webitel.cases.SourceType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InputSource) Reset() {
	*x = InputSource{}
	mi := &file_source_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InputSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputSource) ProtoMessage() {}

func (x *InputSource) ProtoReflect() protoreflect.Message {
	mi := &file_source_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputSource.ProtoReflect.Descriptor instead.
func (*InputSource) Descriptor() ([]byte, []int) {
	return file_source_proto_rawDescGZIP(), []int{3}
}

func (x *InputSource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InputSource) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *InputSource) GetType() SourceType {
	if x != nil {
		return x.Type
	}
	return SourceType_TYPE_UNSPECIFIED
}

// Request message for updating an existing source.
type UpdateSourceRequest struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Id     int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Input  *InputSource           `protobuf:"bytes,2,opt,name=input,proto3" json:"input,omitempty"`
	Fields []string               `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"`
	// ---- JSON PATCH fields mask ----
	// List of JPath fields specified in body(input).
	XJsonMask     []string `protobuf:"bytes,4,rep,name=x_json_mask,json=xJsonMask,proto3" json:"x_json_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSourceRequest) Reset() {
	*x = UpdateSourceRequest{}
	mi := &file_source_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSourceRequest) ProtoMessage() {}

func (x *UpdateSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_source_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSourceRequest.ProtoReflect.Descriptor instead.
func (*UpdateSourceRequest) Descriptor() ([]byte, []int) {
	return file_source_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateSourceRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateSourceRequest) GetInput() *InputSource {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *UpdateSourceRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *UpdateSourceRequest) GetXJsonMask() []string {
	if x != nil {
		return x.XJsonMask
	}
	return nil
}

// Request message for deleting a source.
type DeleteSourceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique ID of the source to delete.
	Id            int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSourceRequest) Reset() {
	*x = DeleteSourceRequest{}
	mi := &file_source_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSourceRequest) ProtoMessage() {}

func (x *DeleteSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_source_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSourceRequest.ProtoReflect.Descriptor instead.
func (*DeleteSourceRequest) Descriptor() ([]byte, []int) {
	return file_source_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteSourceRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Request message for listing sources.
type ListSourceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Page number of result dataset records. offset = (page*size)
	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	// Size count of records on result page. limit = (size++)
	Size int32 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	// Fields to be retrieved as a result.
	Fields []string `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"`
	// Sort the result according to fields.
	Sort string `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort,omitempty"`
	// Filter by unique IDs.
	Id []int64 `protobuf:"varint,5,rep,packed,name=id,proto3" json:"id,omitempty"`
	// Search query string for filtering by name. Supports:
	// - Wildcards (*) for substring matching
	// - Placeholder (?) for single character substitution
	// - Exact match for full names
	Q string `protobuf:"bytes,6,opt,name=q,proto3" json:"q,omitempty"`
	// Filter by source type.
	Type          []SourceType `protobuf:"varint,7,rep,packed,name=type,proto3,enum=webitel.cases.SourceType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSourceRequest) Reset() {
	*x = ListSourceRequest{}
	mi := &file_source_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSourceRequest) ProtoMessage() {}

func (x *ListSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_source_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSourceRequest.ProtoReflect.Descriptor instead.
func (*ListSourceRequest) Descriptor() ([]byte, []int) {
	return file_source_proto_rawDescGZIP(), []int{6}
}

func (x *ListSourceRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListSourceRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListSourceRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *ListSourceRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *ListSourceRequest) GetId() []int64 {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ListSourceRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *ListSourceRequest) GetType() []SourceType {
	if x != nil {
		return x.Type
	}
	return nil
}

// Request message for locating a source by ID.
type LocateSourceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique ID of the source to locate.
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Fields to be retrieved into result.
	Fields        []string `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocateSourceRequest) Reset() {
	*x = LocateSourceRequest{}
	mi := &file_source_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocateSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocateSourceRequest) ProtoMessage() {}

func (x *LocateSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_source_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocateSourceRequest.ProtoReflect.Descriptor instead.
func (*LocateSourceRequest) Descriptor() ([]byte, []int) {
	return file_source_proto_rawDescGZIP(), []int{7}
}

func (x *LocateSourceRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LocateSourceRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

// Response message for locating a source.
type LocateSourceResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The located source.
	Source        *Source `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocateSourceResponse) Reset() {
	*x = LocateSourceResponse{}
	mi := &file_source_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocateSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocateSourceResponse) ProtoMessage() {}

func (x *LocateSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_source_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocateSourceResponse.ProtoReflect.Descriptor instead.
func (*LocateSourceResponse) Descriptor() ([]byte, []int) {
	return file_source_proto_rawDescGZIP(), []int{8}
}

func (x *LocateSourceResponse) GetSource() *Source {
	if x != nil {
		return x.Source
	}
	return nil
}

var File_source_proto protoreflect.FileDescriptor

const file_source_proto_rawDesc = "" +
	"\n" +
	"\fsource.proto\x12\rwebitel.cases\x1a\rgeneral.proto\x1a\x1bgoogle/api/visibility.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1aproto/webitel/option.proto\"\xa8\a\n" +
	"\x06Source\x12O\n" +
	"\x02id\x18\x01 \x01(\x03B?\x92A<2:Unique identifier for the source, generated automatically.R\x02id\x12H\n" +
	"\x04name\x18\x02 \x01(\tB4\x92A12*A unique, descriptive name for the source.xd\x80\x01\x03R\x04name\x12a\n" +
	"\vdescription\x18\x04 \x01(\tB?\x92A<27An optional longer explanation of the source's purpose.x\xf4\x03R\vdescription\x12x\n" +
	"\x04type\x18\x05 \x01(\x0e2\x19.webitel.cases.SourceTypeBI\x92AF22The type of data source represented by this entry.:\x10TYPE_UNSPECIFIEDR\x04type\x12\\\n" +
	"\n" +
	"created_at\x18\x14 \x01(\x03B=\x92A:28Unix timestamp representing when the source was created.R\tcreatedAt\x12W\n" +
	"\n" +
	"updated_at\x18\x15 \x01(\x03B8\x92A523Unix timestamp representing the most recent update.R\tupdatedAt\x12n\n" +
	"\n" +
	"created_by\x18\x16 \x01(\v2\x0f.general.LookupB>\x92A;29Reference to the user who originally created this source.R\tcreatedBy\x12r\n" +
	"\n" +
	"updated_by\x18\x17 \x01(\v2\x0f.general.LookupBB\x92A?2=Reference to the user who most recently modified this source.R\tupdatedBy:\x8a\x01\x92A\x86\x01\n" +
	"\x83\x012:Represents a data source in the contact management system.\xd2\x01\x02id\xd2\x01\x04name\xd2\x01\x04type\xd2\x01\n" +
	"created_at\xd2\x01\n" +
	"updated_at\xd2\x01\n" +
	"created_by\xd2\x01\n" +
	"updated_by\"a\n" +
	"\n" +
	"SourceList\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x05R\x04page\x12\x12\n" +
	"\x04next\x18\x02 \x01(\bR\x04next\x12+\n" +
	"\x05items\x18\x03 \x03(\v2\x15.webitel.cases.SourceR\x05items\"\xd2\x02\n" +
	"\x13CreateSourceRequest\x12\\\n" +
	"\x05input\x18\x01 \x01(\v2\x1a.webitel.cases.InputSourceB*\x92A'2\x1dThe input data for the source\xd2\x01\x05inputR\x05input\x12L\n" +
	"\x06fields\x18\x02 \x03(\tB4\x92A12&Specific fields to include in response\xa0\x012\xa8\x01\x01\xb0\x01\x01R\x06fields:\x8e\x01\x92A\x8a\x01\n" +
	"\x87\x012DRequest for creating a new source with all available OpenAPI options:1{\"input\": {\"name\": \"New Source\", \"type\": \"CALL\"}}\xc0\x01\x03\xc8\x01\x01\xd2\x01\x05input\"\xfc\x02\n" +
	"\vInputSource\x12@\n" +
	"\x04name\x18\x01 \x01(\tB,\x92A)2\x16The name of the source:\n" +
	"New Sourcexd\x80\x01\x02R\x04name\x12d\n" +
	"\vdescription\x18\x02 \x01(\tBB\x92A?2!A short description of the source:\x17No description providedx\xf4\x03R\vdescription\x12R\n" +
	"\x04type\x18\x03 \x01(\x0e2\x19.webitel.cases.SourceTypeB#\x92A 2\x16The type of the source:\x06\"CALL\"R\x04type:q\x92An\n" +
	"l2(The data structure representing a source:,{ \"name\": \"Default Source\", \"type\": \"CALL\" }\xc0\x01\x05\xc8\x01\x02\xd2\x01\x04name\xd2\x01\x04type\"\xb6\x01\n" +
	"\x13UpdateSourceRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x120\n" +
	"\x05input\x18\x02 \x01(\v2\x1a.webitel.cases.InputSourceR\x05input\x12\x16\n" +
	"\x06fields\x18\x03 \x03(\tR\x06fields\x129\n" +
	"\vx_json_mask\x18\x04 \x03(\tB\x19\x92A\a@\x01\x8a\x01\x02^$\xfa\xd2\xe4\x93\x02\t\x12\aPREVIEWR\txJsonMask:\n" +
	"\x92A\a\n" +
	"\x05\xd2\x01\x02id\"1\n" +
	"\x13DeleteSourceRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id:\n" +
	"\x92A\a\n" +
	"\x05\xd2\x01\x02id\"\xb4\x01\n" +
	"\x11ListSourceRequest\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x05R\x04page\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x05R\x04size\x12\x16\n" +
	"\x06fields\x18\x03 \x03(\tR\x06fields\x12\x12\n" +
	"\x04sort\x18\x04 \x01(\tR\x04sort\x12\x0e\n" +
	"\x02id\x18\x05 \x03(\x03R\x02id\x12\f\n" +
	"\x01q\x18\x06 \x01(\tR\x01q\x12-\n" +
	"\x04type\x18\a \x03(\x0e2\x19.webitel.cases.SourceTypeR\x04type\"=\n" +
	"\x13LocateSourceRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x16\n" +
	"\x06fields\x18\x02 \x03(\tR\x06fields\"E\n" +
	"\x14LocateSourceResponse\x12-\n" +
	"\x06source\x18\x01 \x01(\v2\x15.webitel.cases.SourceR\x06source*h\n" +
	"\n" +
	"SourceType\x12\x14\n" +
	"\x10TYPE_UNSPECIFIED\x10\x00\x12\b\n" +
	"\x04CALL\x10\x01\x12\b\n" +
	"\x04CHAT\x10\x02\x12\x10\n" +
	"\fSOCIAL_MEDIA\x10\x03\x12\t\n" +
	"\x05EMAIL\x10\x04\x12\a\n" +
	"\x03API\x10\x05\x12\n" +
	"\n" +
	"\x06MANUAL\x10\x062\x81\x06\n" +
	"\aSources\x12\x97\x01\n" +
	"\vListSources\x12 .webitel.cases.ListSourceRequest\x1a\x19.webitel.cases.SourceList\"K\x92A.\x12,Retrieve a list of sources or search sources\x90\xb5\x18\x01\x82\xd3\xe4\x93\x02\x10\x12\x0e/cases/sources\x12\x84\x01\n" +
	"\fCreateSource\x12\".webitel.cases.CreateSourceRequest\x1a\x15.webitel.cases.Source\"9\x92A\x15\x12\x13Create a new source\x90\xb5\x18\x00\x82\xd3\xe4\x93\x02\x17:\x05input\"\x0e/cases/sources\x12\xad\x01\n" +
	"\fUpdateSource\x12\".webitel.cases.UpdateSourceRequest\x1a\x15.webitel.cases.Source\"b\x92A\x1b\x12\x19Update an existing source\x90\xb5\x18\x02\x82\xd3\xe4\x93\x02::\x05inputZ\x1c:\x05input2\x13/cases/sources/{id}\x1a\x13/cases/sources/{id}\x12~\n" +
	"\fDeleteSource\x12\".webitel.cases.DeleteSourceRequest\x1a\x15.webitel.cases.Source\"3\x92A\x11\x12\x0fDelete a source\x90\xb5\x18\x03\x82\xd3\xe4\x93\x02\x15*\x13/cases/sources/{id}\x12\x92\x01\n" +
	"\fLocateSource\x12\".webitel.cases.LocateSourceRequest\x1a#.webitel.cases.LocateSourceResponse\"9\x92A\x17\x12\x15Locate a source by ID\x90\xb5\x18\x01\x82\xd3\xe4\x93\x02\x15\x12\x13/cases/sources/{id}\x1a\x10\x8a\xb5\x18\fdictionariesB\x9f\x01\n" +
	"\x11com.webitel.casesB\vSourceProtoP\x01Z(github.com/webitel/cases/api/cases;cases\xa2\x02\x03WCX\xaa\x02\rWebitel.Cases\xca\x02\rWebitel\\Cases\xe2\x02\x19Webitel\\Cases\\GPBMetadata\xea\x02\x0eWebitel::Casesb\x06proto3"

var (
	file_source_proto_rawDescOnce sync.Once
	file_source_proto_rawDescData []byte
)

func file_source_proto_rawDescGZIP() []byte {
	file_source_proto_rawDescOnce.Do(func() {
		file_source_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_source_proto_rawDesc), len(file_source_proto_rawDesc)))
	})
	return file_source_proto_rawDescData
}

var file_source_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_source_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_source_proto_goTypes = []any{
	(SourceType)(0),              // 0: webitel.cases.SourceType
	(*Source)(nil),               // 1: webitel.cases.Source
	(*SourceList)(nil),           // 2: webitel.cases.SourceList
	(*CreateSourceRequest)(nil),  // 3: webitel.cases.CreateSourceRequest
	(*InputSource)(nil),          // 4: webitel.cases.InputSource
	(*UpdateSourceRequest)(nil),  // 5: webitel.cases.UpdateSourceRequest
	(*DeleteSourceRequest)(nil),  // 6: webitel.cases.DeleteSourceRequest
	(*ListSourceRequest)(nil),    // 7: webitel.cases.ListSourceRequest
	(*LocateSourceRequest)(nil),  // 8: webitel.cases.LocateSourceRequest
	(*LocateSourceResponse)(nil), // 9: webitel.cases.LocateSourceResponse
	(*Lookup)(nil),               // 10: general.Lookup
}
var file_source_proto_depIdxs = []int32{
	0,  // 0: webitel.cases.Source.type:type_name -> webitel.cases.SourceType
	10, // 1: webitel.cases.Source.created_by:type_name -> general.Lookup
	10, // 2: webitel.cases.Source.updated_by:type_name -> general.Lookup
	1,  // 3: webitel.cases.SourceList.items:type_name -> webitel.cases.Source
	4,  // 4: webitel.cases.CreateSourceRequest.input:type_name -> webitel.cases.InputSource
	0,  // 5: webitel.cases.InputSource.type:type_name -> webitel.cases.SourceType
	4,  // 6: webitel.cases.UpdateSourceRequest.input:type_name -> webitel.cases.InputSource
	0,  // 7: webitel.cases.ListSourceRequest.type:type_name -> webitel.cases.SourceType
	1,  // 8: webitel.cases.LocateSourceResponse.source:type_name -> webitel.cases.Source
	7,  // 9: webitel.cases.Sources.ListSources:input_type -> webitel.cases.ListSourceRequest
	3,  // 10: webitel.cases.Sources.CreateSource:input_type -> webitel.cases.CreateSourceRequest
	5,  // 11: webitel.cases.Sources.UpdateSource:input_type -> webitel.cases.UpdateSourceRequest
	6,  // 12: webitel.cases.Sources.DeleteSource:input_type -> webitel.cases.DeleteSourceRequest
	8,  // 13: webitel.cases.Sources.LocateSource:input_type -> webitel.cases.LocateSourceRequest
	2,  // 14: webitel.cases.Sources.ListSources:output_type -> webitel.cases.SourceList
	1,  // 15: webitel.cases.Sources.CreateSource:output_type -> webitel.cases.Source
	1,  // 16: webitel.cases.Sources.UpdateSource:output_type -> webitel.cases.Source
	1,  // 17: webitel.cases.Sources.DeleteSource:output_type -> webitel.cases.Source
	9,  // 18: webitel.cases.Sources.LocateSource:output_type -> webitel.cases.LocateSourceResponse
	14, // [14:19] is the sub-list for method output_type
	9,  // [9:14] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_source_proto_init() }
func file_source_proto_init() {
	if File_source_proto != nil {
		return
	}
	file_general_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_source_proto_rawDesc), len(file_source_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_source_proto_goTypes,
		DependencyIndexes: file_source_proto_depIdxs,
		EnumInfos:         file_source_proto_enumTypes,
		MessageInfos:      file_source_proto_msgTypes,
	}.Build()
	File_source_proto = out.File
	file_source_proto_goTypes = nil
	file_source_proto_depIdxs = nil
}
