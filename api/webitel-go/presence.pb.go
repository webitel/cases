// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        (unknown)
// source: presence.proto

package api

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SearchPresenceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ----- Basic -------------------------
	Q    string `protobuf:"bytes,1,opt,name=q,proto3" json:"q,omitempty"`
	Id   string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`     // [optional]: <oid:int64>
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"` // [optional]: <entity:user|device|gateway>; default <user:> if omitted
	// ----- Filter -------------------------
	Basic []string `protobuf:"bytes,4,rep,name=basic,proto3" json:"basic,omitempty"`  // [optional] <scope> requested
	Since int64    `protobuf:"varint,5,opt,name=since,proto3" json:"since,omitempty"` // [optional] if modified since
	// ----- Search Options -------------------------
	Fields        []string `protobuf:"bytes,10,rep,name=fields,proto3" json:"fields,omitempty"` // select: output (fields,...)
	Sort          []string `protobuf:"bytes,11,rep,name=sort,proto3" json:"sort,omitempty"`     // select: order by (fields,...)
	Page          int32    `protobuf:"varint,12,opt,name=page,proto3" json:"page,omitempty"`    // select: offset {page}
	Size          int32    `protobuf:"varint,13,opt,name=size,proto3" json:"size,omitempty"`    // select: limit {size}
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchPresenceRequest) Reset() {
	*x = SearchPresenceRequest{}
	mi := &file_presence_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchPresenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchPresenceRequest) ProtoMessage() {}

func (x *SearchPresenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_presence_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchPresenceRequest.ProtoReflect.Descriptor instead.
func (*SearchPresenceRequest) Descriptor() ([]byte, []int) {
	return file_presence_proto_rawDescGZIP(), []int{0}
}

func (x *SearchPresenceRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *SearchPresenceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SearchPresenceRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SearchPresenceRequest) GetBasic() []string {
	if x != nil {
		return x.Basic
	}
	return nil
}

func (x *SearchPresenceRequest) GetSince() int64 {
	if x != nil {
		return x.Since
	}
	return 0
}

func (x *SearchPresenceRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *SearchPresenceRequest) GetSort() []string {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *SearchPresenceRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchPresenceRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type SearchPresenceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,10,opt,name=page,proto3" json:"page,omitempty"` // select: offset {page}
	Size          int32                  `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"` // search: limit {size}
	Next          bool                   `protobuf:"varint,12,opt,name=next,proto3" json:"next,omitempty"` // search: has {next} page ?
	Items         []*PresenceStatus      `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchPresenceResponse) Reset() {
	*x = SearchPresenceResponse{}
	mi := &file_presence_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchPresenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchPresenceResponse) ProtoMessage() {}

func (x *SearchPresenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_presence_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchPresenceResponse.ProtoReflect.Descriptor instead.
func (*SearchPresenceResponse) Descriptor() ([]byte, []int) {
	return file_presence_proto_rawDescGZIP(), []int{1}
}

func (x *SearchPresenceResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchPresenceResponse) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SearchPresenceResponse) GetNext() bool {
	if x != nil {
		return x.Next
	}
	return false
}

func (x *SearchPresenceResponse) GetItems() []*PresenceStatus {
	if x != nil {
		return x.Items
	}
	return nil
}

type SetStatusRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// int64 id = 1; // user.id
	Publish       *UserPresence `protobuf:"bytes,2,opt,name=publish,proto3" json:"publish,omitempty"` // BODY: partial modifications
	Fields        []string      `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"`   // PATCH: partial attributes
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetStatusRequest) Reset() {
	*x = SetStatusRequest{}
	mi := &file_presence_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetStatusRequest) ProtoMessage() {}

func (x *SetStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_presence_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetStatusRequest.ProtoReflect.Descriptor instead.
func (*SetStatusRequest) Descriptor() ([]byte, []int) {
	return file_presence_proto_rawDescGZIP(), []int{2}
}

func (x *SetStatusRequest) GetPublish() *UserPresence {
	if x != nil {
		return x.Publish
	}
	return nil
}

func (x *SetStatusRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

type UserPresence struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`               // [required] user identity
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`        // [optional] set of unique 'active' presentities {dnd,dlg,sip,wss}; assume {offline} if omitted
	Note          string                 `protobuf:"bytes,3,opt,name=note,proto3" json:"note,omitempty"`            // [optional] human readable comment
	Expires       int32                  `protobuf:"varint,4,opt,name=expires,proto3" json:"expires,omitempty"`     // [optional] <note> will be cleaned up after seconds
	Timestamp     int64                  `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // [required] last activity time
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserPresence) Reset() {
	*x = UserPresence{}
	mi := &file_presence_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserPresence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPresence) ProtoMessage() {}

func (x *UserPresence) ProtoReflect() protoreflect.Message {
	mi := &file_presence_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPresence.ProtoReflect.Descriptor instead.
func (*UserPresence) Descriptor() ([]byte, []int) {
	return file_presence_proto_rawDescGZIP(), []int{3}
}

func (x *UserPresence) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserPresence) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserPresence) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *UserPresence) GetExpires() int32 {
	if x != nil {
		return x.Expires
	}
	return 0
}

func (x *UserPresence) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// PresenceStatus PUBLISH
type PresenceStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// basic:latest
	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                               // [required] tuple unique id; <track>
	App       string `protobuf:"bytes,2,opt,name=app,proto3" json:"app,omitempty"`                             // [optional] service node identity
	Status    string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`                       // [optional] unique set of <enum:dnd|call|sip|wss>; assume <offline> if blank; <scope> on request
	Note      string `protobuf:"bytes,4,opt,name=note,proto3" json:"note,omitempty"`                           // [optional] human readable comment
	Open      int32  `protobuf:"varint,5,opt,name=open,proto3" json:"open,omitempty"`                          // [optional] positive value signify 'active'
	Closed    bool   `protobuf:"varint,6,opt,name=closed,proto3" json:"closed,omitempty"`                      // [optional] signify <status> tuple gone from user's presence; equls to (open == 0)
	Contact   string `protobuf:"bytes,7,opt,name=contact,proto3" json:"contact,omitempty"`                     // [optional] communication <url>
	Priority  int32  `protobuf:"varint,8,opt,name=priority,proto3" json:"priority,omitempty"`                  // [optional] importance level of this within presentity's
	Sequence  int64  `protobuf:"varint,9,opt,name=sequence,proto3" json:"sequence,omitempty"`                  // [optional] this tuple (document) modifications version
	Expires   int64  `protobuf:"varint,10,opt,name=expires,proto3" json:"expires,omitempty"`                   // NOTE: <dnd> actualy has no expires until user manualy switch it off
	Timestamp int64  `protobuf:"varint,11,opt,name=timestamp,proto3" json:"timestamp,omitempty"`               // [required] opened time
	DomainId  int64  `protobuf:"varint,12,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"` // [hidden] for cluster purpose
	// detailed: -registered -tracking tuples
	Presence      []*PresenceStatus `protobuf:"bytes,13,rep,name=presence,proto3" json:"presence,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PresenceStatus) Reset() {
	*x = PresenceStatus{}
	mi := &file_presence_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PresenceStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresenceStatus) ProtoMessage() {}

func (x *PresenceStatus) ProtoReflect() protoreflect.Message {
	mi := &file_presence_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresenceStatus.ProtoReflect.Descriptor instead.
func (*PresenceStatus) Descriptor() ([]byte, []int) {
	return file_presence_proto_rawDescGZIP(), []int{4}
}

func (x *PresenceStatus) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PresenceStatus) GetApp() string {
	if x != nil {
		return x.App
	}
	return ""
}

func (x *PresenceStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PresenceStatus) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *PresenceStatus) GetOpen() int32 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *PresenceStatus) GetClosed() bool {
	if x != nil {
		return x.Closed
	}
	return false
}

func (x *PresenceStatus) GetContact() string {
	if x != nil {
		return x.Contact
	}
	return ""
}

func (x *PresenceStatus) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *PresenceStatus) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *PresenceStatus) GetExpires() int64 {
	if x != nil {
		return x.Expires
	}
	return 0
}

func (x *PresenceStatus) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *PresenceStatus) GetDomainId() int64 {
	if x != nil {
		return x.DomainId
	}
	return 0
}

func (x *PresenceStatus) GetPresence() []*PresenceStatus {
	if x != nil {
		return x.Presence
	}
	return nil
}

var File_presence_proto protoreflect.FileDescriptor

var file_presence_proto_rawDesc = string([]byte{
	0x0a, 0x0e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x03, 0x61, 0x70, 0x69, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xc9, 0x01, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a,
	0x01, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x62, 0x61, 0x73, 0x69, 0x63, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x62, 0x61, 0x73, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22,
	0x7f, 0x0a, 0x16, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x29, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0x57, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x07, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x0c, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xe2,
	0x02, 0x0a, 0x0e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x61, 0x70, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x6f, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6f,
	0x70, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x49, 0x64, 0x12, 0x2f, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x0d,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x08, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x63, 0x65, 0x32, 0x7c, 0x0a, 0x08, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x70, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x15, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e,
	0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31,
	0x3a, 0x01, 0x2a, 0x5a, 0x0e, 0x3a, 0x01, 0x2a, 0x32, 0x09, 0x2f, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x63, 0x65, 0x32, 0x1c, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x2e, 0x69, 0x64, 0x7d, 0x2f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63,
	0x65, 0x42, 0x58, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x42, 0x0d, 0x50, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x12, 0x77,
	0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x3b, 0x61, 0x70,
	0x69, 0xa2, 0x02, 0x03, 0x41, 0x58, 0x58, 0xaa, 0x02, 0x03, 0x41, 0x70, 0x69, 0xca, 0x02, 0x03,
	0x41, 0x70, 0x69, 0xe2, 0x02, 0x0f, 0x41, 0x70, 0x69, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x03, 0x41, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
})

var (
	file_presence_proto_rawDescOnce sync.Once
	file_presence_proto_rawDescData []byte
)

func file_presence_proto_rawDescGZIP() []byte {
	file_presence_proto_rawDescOnce.Do(func() {
		file_presence_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_presence_proto_rawDesc), len(file_presence_proto_rawDesc)))
	})
	return file_presence_proto_rawDescData
}

var file_presence_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_presence_proto_goTypes = []any{
	(*SearchPresenceRequest)(nil),  // 0: api.SearchPresenceRequest
	(*SearchPresenceResponse)(nil), // 1: api.SearchPresenceResponse
	(*SetStatusRequest)(nil),       // 2: api.SetStatusRequest
	(*UserPresence)(nil),           // 3: api.UserPresence
	(*PresenceStatus)(nil),         // 4: api.PresenceStatus
}
var file_presence_proto_depIdxs = []int32{
	4, // 0: api.SearchPresenceResponse.items:type_name -> api.PresenceStatus
	3, // 1: api.SetStatusRequest.publish:type_name -> api.UserPresence
	4, // 2: api.PresenceStatus.presence:type_name -> api.PresenceStatus
	2, // 3: api.Presence.SetStatus:input_type -> api.SetStatusRequest
	4, // 4: api.Presence.SetStatus:output_type -> api.PresenceStatus
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_presence_proto_init() }
func file_presence_proto_init() {
	if File_presence_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_presence_proto_rawDesc), len(file_presence_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_presence_proto_goTypes,
		DependencyIndexes: file_presence_proto_depIdxs,
		MessageInfos:      file_presence_proto_msgTypes,
	}.Build()
	File_presence_proto = out.File
	file_presence_proto_goTypes = nil
	file_presence_proto_depIdxs = nil
}
