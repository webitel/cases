// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        (unknown)
// source: knowledgebase/spaces.proto

package spaces

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/googleapis/api/visibility"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SpaceList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Space(s) dataset page.
	Data []*Space `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	// The page number of the partial result.
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	// Indicates that this is a partial result.
	// More data available upon query: ?size=${data.len}&page=${page++}
	Next          bool `protobuf:"varint,3,opt,name=next,proto3" json:"next,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpaceList) Reset() {
	*x = SpaceList{}
	mi := &file_knowledgebase_spaces_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpaceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceList) ProtoMessage() {}

func (x *SpaceList) ProtoReflect() protoreflect.Message {
	mi := &file_knowledgebase_spaces_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceList.ProtoReflect.Descriptor instead.
func (*SpaceList) Descriptor() ([]byte, []int) {
	return file_knowledgebase_spaces_proto_rawDescGZIP(), []int{0}
}

func (x *SpaceList) GetData() []*Space {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SpaceList) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SpaceList) GetNext() bool {
	if x != nil {
		return x.Next
	}
	return false
}

type LocateSpacesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Source Fields to return into result.
	Fields []string `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	// The Space source IDentifier.
	// Accept: `etag` (obsolete+) or `id`.
	Etag          string `protobuf:"bytes,2,opt,name=etag,proto3" json:"etag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocateSpacesRequest) Reset() {
	*x = LocateSpacesRequest{}
	mi := &file_knowledgebase_spaces_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocateSpacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocateSpacesRequest) ProtoMessage() {}

func (x *LocateSpacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_knowledgebase_spaces_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocateSpacesRequest.ProtoReflect.Descriptor instead.
func (*LocateSpacesRequest) Descriptor() ([]byte, []int) {
	return file_knowledgebase_spaces_proto_rawDescGZIP(), []int{1}
}

func (x *LocateSpacesRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *LocateSpacesRequest) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

type ListSpacesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Page  int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	// Limit of result page records count.   _default(16); limit=(size<=0?-1:size+1);_
	//
	// ```javascript
	// const
	//
	//	  default = 16
	//	, maximum = 32
	//
	// ;
	//
	// ```
	Size int32 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	// Search term:
	// `?` - matches any character
	// `*` - matches 0 or more characters
	// Used to query records within a set of `qin` fields, eg: name, etc...
	Q string `protobuf:"bytes,5,opt,name=q,proto3" json:"q,omitempty"`
	// Sort result dataset of records by fields.
	// ```
	// sort ::= *( ORDER name )
	//
	// ORDER  = ASC / DESC
	// DESC   = "-" / "!"
	// ASC    = [ "+" ]   ; Default
	// ```
	//
	// # Fields available
	//
	// - `id`(seq)
	// - `domain`{name}
	// - `state`
	Sort   []string `protobuf:"bytes,3,rep,name=sort,proto3" json:"sort,omitempty"`
	Fields []string `protobuf:"bytes,4,rep,name=fields,proto3" json:"fields,omitempty"`
	// Records with unique IDentifier(s).
	// Accept: `id` -or- `etag`.
	Id            []string `protobuf:"bytes,6,rep,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSpacesRequest) Reset() {
	*x = ListSpacesRequest{}
	mi := &file_knowledgebase_spaces_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSpacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSpacesRequest) ProtoMessage() {}

func (x *ListSpacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_knowledgebase_spaces_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSpacesRequest.ProtoReflect.Descriptor instead.
func (*ListSpacesRequest) Descriptor() ([]byte, []int) {
	return file_knowledgebase_spaces_proto_rawDescGZIP(), []int{2}
}

func (x *ListSpacesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListSpacesRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListSpacesRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *ListSpacesRequest) GetSort() []string {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *ListSpacesRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *ListSpacesRequest) GetId() []string {
	if x != nil {
		return x.Id
	}
	return nil
}

type UpdateSpaceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// JSON PATCH fields mask.
	// List of JPath fields specified in body(input).
	XJsonMask []string `protobuf:"bytes,1,rep,name=x_json_mask,json=xJsonMask,proto3" json:"x_json_mask,omitempty"`
	// Source Fields to return into result.
	Fields []string `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
	// NEW Space source changes
	Input         *InputSpace `protobuf:"bytes,3,opt,name=input,proto3" json:"input,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSpaceRequest) Reset() {
	*x = UpdateSpaceRequest{}
	mi := &file_knowledgebase_spaces_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSpaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSpaceRequest) ProtoMessage() {}

func (x *UpdateSpaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_knowledgebase_spaces_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSpaceRequest.ProtoReflect.Descriptor instead.
func (*UpdateSpaceRequest) Descriptor() ([]byte, []int) {
	return file_knowledgebase_spaces_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateSpaceRequest) GetXJsonMask() []string {
	if x != nil {
		return x.XJsonMask
	}
	return nil
}

func (x *UpdateSpaceRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *UpdateSpaceRequest) GetInput() *InputSpace {
	if x != nil {
		return x.Input
	}
	return nil
}

type InputSpaceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// JSON PATCH fields mask.
	// List of JPath fields specified in body(input).
	XJsonMask []string `protobuf:"bytes,1,rep,name=x_json_mask,json=xJsonMask,proto3" json:"x_json_mask,omitempty"`
	// Source Fields to return into result.
	Fields []string `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
	// NEW Spaces source changes
	Input         []*InputSpace `protobuf:"bytes,3,rep,name=input,proto3" json:"input,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InputSpaceRequest) Reset() {
	*x = InputSpaceRequest{}
	mi := &file_knowledgebase_spaces_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InputSpaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputSpaceRequest) ProtoMessage() {}

func (x *InputSpaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_knowledgebase_spaces_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputSpaceRequest.ProtoReflect.Descriptor instead.
func (*InputSpaceRequest) Descriptor() ([]byte, []int) {
	return file_knowledgebase_spaces_proto_rawDescGZIP(), []int{4}
}

func (x *InputSpaceRequest) GetXJsonMask() []string {
	if x != nil {
		return x.XJsonMask
	}
	return nil
}

func (x *InputSpaceRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *InputSpaceRequest) GetInput() []*InputSpace {
	if x != nil {
		return x.Input
	}
	return nil
}

type CreateSpacesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Fields to be retrieved into result of changes.
	Fields []string `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	// Data is a set of Spaces to be created.
	Input         []*InputSpace `protobuf:"bytes,2,rep,name=input,proto3" json:"input,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSpacesRequest) Reset() {
	*x = CreateSpacesRequest{}
	mi := &file_knowledgebase_spaces_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSpacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSpacesRequest) ProtoMessage() {}

func (x *CreateSpacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_knowledgebase_spaces_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSpacesRequest.ProtoReflect.Descriptor instead.
func (*CreateSpacesRequest) Descriptor() ([]byte, []int) {
	return file_knowledgebase_spaces_proto_rawDescGZIP(), []int{5}
}

func (x *CreateSpacesRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *CreateSpacesRequest) GetInput() []*InputSpace {
	if x != nil {
		return x.Input
	}
	return nil
}

type DeleteSpacesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Fields to be retrieved into result of changes.
	Fields []string `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	// Set of unique Space IDs to deal with
	Etag          []string `protobuf:"bytes,2,rep,name=etag,proto3" json:"etag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSpacesRequest) Reset() {
	*x = DeleteSpacesRequest{}
	mi := &file_knowledgebase_spaces_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSpacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSpacesRequest) ProtoMessage() {}

func (x *DeleteSpacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_knowledgebase_spaces_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSpacesRequest.ProtoReflect.Descriptor instead.
func (*DeleteSpacesRequest) Descriptor() ([]byte, []int) {
	return file_knowledgebase_spaces_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteSpacesRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *DeleteSpacesRequest) GetEtag() []string {
	if x != nil {
		return x.Etag
	}
	return nil
}

type DeleteSpaceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Fields to be retrieved into result of changes.
	Fields []string `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	// Unique ID of the latest version of a resource.
	Etag          string `protobuf:"bytes,2,opt,name=etag,proto3" json:"etag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSpaceRequest) Reset() {
	*x = DeleteSpaceRequest{}
	mi := &file_knowledgebase_spaces_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSpaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSpaceRequest) ProtoMessage() {}

func (x *DeleteSpaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_knowledgebase_spaces_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSpaceRequest.ProtoReflect.Descriptor instead.
func (*DeleteSpaceRequest) Descriptor() ([]byte, []int) {
	return file_knowledgebase_spaces_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteSpaceRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *DeleteSpaceRequest) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

var File_knowledgebase_spaces_proto protoreflect.FileDescriptor

var file_knowledgebase_spaces_proto_rawDesc = string([]byte{
	0x0a, 0x1a, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x2f,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x77, 0x65,
	0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x62,
	0x61, 0x73, 0x65, 0x1a, 0x19, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x62, 0x61,
	0x73, 0x65, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x69, 0x73, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x65, 0x0a, 0x09, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74,
	0x22, 0x41, 0x0a, 0x13, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x65, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65,
	0x74, 0x61, 0x67, 0x22, 0xfb, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x0c, 0x0a, 0x01, 0x71, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x71, 0x12,
	0x45, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x42, 0x31, 0x92,
	0x41, 0x2e, 0x3a, 0x02, 0x69, 0x64, 0x4a, 0x11, 0x22, 0x21, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x2c, 0x74, 0x61, 0x67, 0x22, 0x8a, 0x01, 0x0d, 0x5e, 0x5b, 0x2b, 0x7c,
	0x2d, 0x7c, 0x21, 0x5d, 0x3f, 0x5c, 0x77, 0x2b, 0x24, 0xb0, 0x01, 0x01, 0x9a, 0x02, 0x01, 0x01,
	0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x59, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x42, 0x41, 0x92, 0x41, 0x3e, 0x3a, 0x01, 0x2a, 0x4a, 0x36,
	0x22, 0x2a, 0x2c, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x2e, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x33,
	0x29, 0x2e, 0x73, 0x6f, 0x72, 0x74, 0x28, 0x21, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x29, 0x7b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x2c, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x7d, 0x22, 0xb0, 0x01, 0x01, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0xa0, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0b, 0x78, 0x5f, 0x6a, 0x73,
	0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x19, 0x92,
	0x41, 0x07, 0x40, 0x01, 0x8a, 0x01, 0x02, 0x5e, 0x24, 0xfa, 0xd2, 0xe4, 0x93, 0x02, 0x09, 0x12,
	0x07, 0x50, 0x52, 0x45, 0x56, 0x49, 0x45, 0x57, 0x52, 0x09, 0x78, 0x4a, 0x73, 0x6f, 0x6e, 0x4d,
	0x61, 0x73, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x37, 0x0a, 0x05, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x77, 0x65, 0x62,
	0x69, 0x74, 0x65, 0x6c, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x05, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x22, 0xa0, 0x01, 0x0a, 0x11, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0b, 0x78, 0x5f,
	0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42,
	0x1a, 0x92, 0x41, 0x07, 0x40, 0x01, 0x8a, 0x01, 0x02, 0x5e, 0x24, 0xfa, 0xd2, 0xe4, 0x93, 0x02,
	0x0a, 0x12, 0x08, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x52, 0x09, 0x78, 0x4a, 0x73,
	0x6f, 0x6e, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x37,
	0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x71, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x42, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x42, 0x09, 0x92, 0x41, 0x06, 0xa8, 0x01, 0x01,
	0xb0, 0x01, 0x01, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x6c, 0x0a, 0x13, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x2f, 0x0a, 0x04, 0x65, 0x74, 0x61,
	0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x42, 0x1b, 0x92, 0x41, 0x18, 0x8a, 0x01, 0x05, 0x5e,
	0x5c, 0x77, 0x2b, 0x24, 0xa8, 0x01, 0x01, 0xb0, 0x01, 0x01, 0xca, 0x3e, 0x07, 0xfa, 0x02, 0x04,
	0x65, 0x74, 0x61, 0x67, 0x52, 0x04, 0x65, 0x74, 0x61, 0x67, 0x3a, 0x0c, 0x92, 0x41, 0x09, 0x0a,
	0x07, 0xd2, 0x01, 0x04, 0x65, 0x74, 0x61, 0x67, 0x22, 0x65, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x29, 0x0a, 0x04, 0x65, 0x74, 0x61, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x15, 0x92, 0x41, 0x12, 0x8a, 0x01, 0x05, 0x5e, 0x5c, 0x77, 0x2b,
	0x24, 0xca, 0x3e, 0x07, 0xfa, 0x02, 0x04, 0x65, 0x74, 0x61, 0x67, 0x52, 0x04, 0x65, 0x74, 0x61,
	0x67, 0x3a, 0x0c, 0x92, 0x41, 0x09, 0x0a, 0x07, 0xd2, 0x01, 0x04, 0x65, 0x74, 0x61, 0x67, 0x32,
	0xb1, 0x08, 0x0a, 0x06, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x12, 0xd9, 0x04, 0x0a, 0x0a, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x12, 0x28, 0x2e, 0x77, 0x65, 0x62, 0x69,
	0x74, 0x65, 0x6c, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xfe, 0x03, 0x92, 0x41, 0xeb, 0x03, 0x1a, 0xe8, 0x03, 0x7c,
	0x20, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7c, 0x20, 0x54,
	0x79, 0x70, 0x65, 0x20, 0x0a, 0x7c, 0x20, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d,
	0x2d, 0x2d, 0x20, 0x7c, 0x20, 0x2d, 0x2d, 0x2d, 0x2d, 0x20, 0x0a, 0x7c, 0x20, 0x2a, 0x2a, 0x2d,
	0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x20, 0x52, 0x45, 0x41, 0x44, 0x2d,
	0x4f, 0x4e, 0x4c, 0x59, 0x20, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d,
	0x2a, 0x2a, 0x20, 0x7c, 0x20, 0x0a, 0x7c, 0x20, 0x60, 0x69, 0x64, 0x60, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x20, 0x20, 0x7c, 0x20, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x20, 0x0a, 0x7c, 0x20, 0x60,
	0x76, 0x65, 0x72, 0x60, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7c, 0x20, 0x69, 0x6e, 0x74,
	0x33, 0x32, 0x20, 0x0a, 0x7c, 0x20, 0x60, 0x65, 0x74, 0x61, 0x67, 0x60, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x20, 0x7c, 0x20, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x20, 0x0a, 0x7c, 0x20, 0x2a, 0x2a,
	0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x20, 0x4f, 0x50, 0x45, 0x52, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x20, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d,
	0x2d, 0x2a, 0x2a, 0x20, 0x7c, 0x20, 0x0a, 0x7c, 0x20, 0x60, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x60, 0x20, 0x7c, 0x20, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x28, 0x65, 0x70,
	0x6f, 0x63, 0x68, 0x3a, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x29, 0x20, 0x0a, 0x7c, 0x20, 0x60, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x60, 0x20, 0x7c, 0x20, 0x6c, 0x6f, 0x6f,
	0x6b, 0x75, 0x70, 0x28, 0x75, 0x73, 0x65, 0x72, 0x29, 0x20, 0x0a, 0x7c, 0x20, 0x60, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x60, 0x20, 0x7c, 0x20, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x28, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x3a, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x29, 0x20, 0x0a,
	0x7c, 0x20, 0x60, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x60, 0x20, 0x7c,
	0x20, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x28, 0x75, 0x73, 0x65, 0x72, 0x29, 0x20, 0x0a, 0x7c,
	0x20, 0x2a, 0x2a, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x20, 0x41, 0x54,
	0x54, 0x52, 0x49, 0x42, 0x55, 0x54, 0x45, 0x53, 0x20, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d,
	0x2d, 0x2d, 0x2d, 0x2d, 0x2a, 0x2a, 0x20, 0x7c, 0x20, 0x0a, 0x7c, 0x20, 0x60, 0x6e, 0x61, 0x6d,
	0x65, 0x60, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7c, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x21, 0x20,
	0x0a, 0x7c, 0x20, 0x60, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x60, 0x20, 0x20,
	0x20, 0x7c, 0x20, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x20, 0x28, 0x68, 0x6f, 0x6d, 0x65, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x29, 0x20, 0x0a, 0x7c, 0x20, 0x60, 0x73, 0x74, 0x61, 0x74, 0x65, 0x60,
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x7c, 0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x0a, 0x7c,
	0x20, 0x60, 0x68, 0x61, 0x73, 0x5f, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x60, 0x7c,
	0x20, 0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x0a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x09, 0x12, 0x07, 0x2f,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x12, 0x6f, 0x0a, 0x0b, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x65,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x2a, 0x2e, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x22,
	0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73,
	0x2f, 0x7b, 0x65, 0x74, 0x61, 0x67, 0x7d, 0x12, 0x6d, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x28, 0x2e, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c,
	0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x22, 0x16,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x3a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x07, 0x2f,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x12, 0x7b, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x29, 0x2e, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x22, 0x23,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x32, 0x14, 0x2f,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x65, 0x74,
	0x61, 0x67, 0x7d, 0x12, 0x6e, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x29, 0x2e, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x10, 0x2a, 0x0e, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x65, 0x74,
	0x61, 0x67, 0x7d, 0x42, 0xbb, 0x01, 0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x2e, 0x77, 0x65, 0x62, 0x69,
	0x74, 0x65, 0x6c, 0x2e, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73,
	0x65, 0x42, 0x0b, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x1c, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x3b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0xa2, 0x02,
	0x03, 0x57, 0x4b, 0x58, 0xaa, 0x02, 0x15, 0x57, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x4b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0xca, 0x02, 0x15, 0x57,
	0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x5c, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x62, 0x61, 0x73, 0x65, 0xe2, 0x02, 0x21, 0x57, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x5c, 0x4b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73, 0x65, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x16, 0x57, 0x65, 0x62, 0x69, 0x74,
	0x65, 0x6c, 0x3a, 0x3a, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x62, 0x61, 0x73,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_knowledgebase_spaces_proto_rawDescOnce sync.Once
	file_knowledgebase_spaces_proto_rawDescData []byte
)

func file_knowledgebase_spaces_proto_rawDescGZIP() []byte {
	file_knowledgebase_spaces_proto_rawDescOnce.Do(func() {
		file_knowledgebase_spaces_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_knowledgebase_spaces_proto_rawDesc), len(file_knowledgebase_spaces_proto_rawDesc)))
	})
	return file_knowledgebase_spaces_proto_rawDescData
}

var file_knowledgebase_spaces_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_knowledgebase_spaces_proto_goTypes = []any{
	(*SpaceList)(nil),           // 0: webitel.knowledgebase.SpaceList
	(*LocateSpacesRequest)(nil), // 1: webitel.knowledgebase.LocateSpacesRequest
	(*ListSpacesRequest)(nil),   // 2: webitel.knowledgebase.ListSpacesRequest
	(*UpdateSpaceRequest)(nil),  // 3: webitel.knowledgebase.UpdateSpaceRequest
	(*InputSpaceRequest)(nil),   // 4: webitel.knowledgebase.InputSpaceRequest
	(*CreateSpacesRequest)(nil), // 5: webitel.knowledgebase.CreateSpacesRequest
	(*DeleteSpacesRequest)(nil), // 6: webitel.knowledgebase.DeleteSpacesRequest
	(*DeleteSpaceRequest)(nil),  // 7: webitel.knowledgebase.DeleteSpaceRequest
	(*Space)(nil),               // 8: webitel.knowledgebase.Space
	(*InputSpace)(nil),          // 9: webitel.knowledgebase.InputSpace
}
var file_knowledgebase_spaces_proto_depIdxs = []int32{
	8, // 0: webitel.knowledgebase.SpaceList.data:type_name -> webitel.knowledgebase.Space
	9, // 1: webitel.knowledgebase.UpdateSpaceRequest.input:type_name -> webitel.knowledgebase.InputSpace
	9, // 2: webitel.knowledgebase.InputSpaceRequest.input:type_name -> webitel.knowledgebase.InputSpace
	9, // 3: webitel.knowledgebase.CreateSpacesRequest.input:type_name -> webitel.knowledgebase.InputSpace
	2, // 4: webitel.knowledgebase.Spaces.ListSpaces:input_type -> webitel.knowledgebase.ListSpacesRequest
	1, // 5: webitel.knowledgebase.Spaces.LocateSpace:input_type -> webitel.knowledgebase.LocateSpacesRequest
	4, // 6: webitel.knowledgebase.Spaces.CreateSpace:input_type -> webitel.knowledgebase.InputSpaceRequest
	3, // 7: webitel.knowledgebase.Spaces.UpdateSpace:input_type -> webitel.knowledgebase.UpdateSpaceRequest
	7, // 8: webitel.knowledgebase.Spaces.DeleteSpace:input_type -> webitel.knowledgebase.DeleteSpaceRequest
	0, // 9: webitel.knowledgebase.Spaces.ListSpaces:output_type -> webitel.knowledgebase.SpaceList
	8, // 10: webitel.knowledgebase.Spaces.LocateSpace:output_type -> webitel.knowledgebase.Space
	8, // 11: webitel.knowledgebase.Spaces.CreateSpace:output_type -> webitel.knowledgebase.Space
	8, // 12: webitel.knowledgebase.Spaces.UpdateSpace:output_type -> webitel.knowledgebase.Space
	8, // 13: webitel.knowledgebase.Spaces.DeleteSpace:output_type -> webitel.knowledgebase.Space
	9, // [9:14] is the sub-list for method output_type
	4, // [4:9] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_knowledgebase_spaces_proto_init() }
func file_knowledgebase_spaces_proto_init() {
	if File_knowledgebase_spaces_proto != nil {
		return
	}
	file_knowledgebase_space_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_knowledgebase_spaces_proto_rawDesc), len(file_knowledgebase_spaces_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_knowledgebase_spaces_proto_goTypes,
		DependencyIndexes: file_knowledgebase_spaces_proto_depIdxs,
		MessageInfos:      file_knowledgebase_spaces_proto_msgTypes,
	}.Build()
	File_knowledgebase_spaces_proto = out.File
	file_knowledgebase_spaces_proto_goTypes = nil
	file_knowledgebase_spaces_proto_depIdxs = nil
}
