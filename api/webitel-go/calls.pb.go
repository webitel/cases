// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        (unknown)
// source: calls.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SearchCallsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Related To
	User          *UserId   `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Device        *DeviceId `protobuf:"bytes,2,opt,name=device,proto3" json:"device,omitempty"` // GatewayId gateway = 3;
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchCallsRequest) Reset() {
	*x = SearchCallsRequest{}
	mi := &file_calls_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchCallsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCallsRequest) ProtoMessage() {}

func (x *SearchCallsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calls_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCallsRequest.ProtoReflect.Descriptor instead.
func (*SearchCallsRequest) Descriptor() ([]byte, []int) {
	return file_calls_proto_rawDescGZIP(), []int{0}
}

func (x *SearchCallsRequest) GetUser() *UserId {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *SearchCallsRequest) GetDevice() *DeviceId {
	if x != nil {
		return x.Device
	}
	return nil
}

type SearchCallsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []*Call                `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchCallsResponse) Reset() {
	*x = SearchCallsResponse{}
	mi := &file_calls_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchCallsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCallsResponse) ProtoMessage() {}

func (x *SearchCallsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calls_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCallsResponse.ProtoReflect.Descriptor instead.
func (*SearchCallsResponse) Descriptor() ([]byte, []int) {
	return file_calls_proto_rawDescGZIP(), []int{1}
}

func (x *SearchCallsResponse) GetList() []*Call {
	if x != nil {
		return x.List
	}
	return nil
}

// CallerId display value.
type CallerId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Number        string                 `protobuf:"bytes,2,opt,name=number,proto3" json:"number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallerId) Reset() {
	*x = CallerId{}
	mi := &file_calls_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallerId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallerId) ProtoMessage() {}

func (x *CallerId) ProtoReflect() protoreflect.Message {
	mi := &file_calls_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallerId.ProtoReflect.Descriptor instead.
func (*CallerId) Descriptor() ([]byte, []int) {
	return file_calls_proto_rawDescGZIP(), []int{2}
}

func (x *CallerId) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CallerId) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

// The Caller profile
type Caller struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Uuid  string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`   // [required] unique_id (channel.uuid)
	Proto string                 `protobuf:"bytes,2,opt,name=proto,proto3" json:"proto,omitempty"` // [required] protocol; channel source: sip|sips|webrtc
	// From:
	Origin *CallerId `protobuf:"bytes,3,opt,name=origin,proto3" json:"origin,omitempty"` // [optional] [From]: source
	Caller *CallerId `protobuf:"bytes,4,opt,name=caller,proto3" json:"caller,omitempty"` // [required] leg[A] display; at least is the same as origin
	Callee *CallerId `protobuf:"bytes,5,opt,name=callee,proto3" json:"callee,omitempty"` // [optional] leg[B] display
	ANI    string    `protobuf:"bytes,6,opt,name=ANI,proto3" json:"ANI,omitempty"`       // [optional] [A]utomatic[N]umber[I]dentification
	// To:
	Direction   string `protobuf:"bytes,7,opt,name=direction,proto3" json:"direction,omitempty"`     // [required] inbound | outbound
	Destination string `protobuf:"bytes,8,opt,name=destination,proto3" json:"destination,omitempty"` // [required] [To]: in most cases this is the number
	Transferred string `protobuf:"bytes,9,opt,name=transferred,proto3" json:"transferred,omitempty"` // [optional] transfer source
	// Timing of stages
	CreatedAt       uint64 `protobuf:"varint,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                     // [required] !
	ProgressAt      uint64 `protobuf:"varint,11,opt,name=progress_at,json=progressAt,proto3" json:"progress_at,omitempty"`                  // [optional]
	ProgressMediaAt uint64 `protobuf:"varint,12,opt,name=progress_media_at,json=progressMediaAt,proto3" json:"progress_media_at,omitempty"` // [optional]
	AnsweredAt      uint64 `protobuf:"varint,13,opt,name=answered_at,json=answeredAt,proto3" json:"answered_at,omitempty"`                  // [optional]
	BridgedAt       uint64 `protobuf:"varint,14,opt,name=bridged_at,json=bridgedAt,proto3" json:"bridged_at,omitempty"`                     // [optional]
	HangupAt        uint64 `protobuf:"varint,15,opt,name=hangup_at,json=hangupAt,proto3" json:"hangup_at,omitempty"`                        // [optional] unlil hangup state reached
	OnholdAt        uint64 `protobuf:"varint,16,opt,name=onhold_at,json=onholdAt,proto3" json:"onhold_at,omitempty"`                        // [optional] last 'hold' at time
	OnholdMs        uint64 `protobuf:"varint,17,opt,name=onhold_ms,json=onholdMs,proto3" json:"onhold_ms,omitempty"`                        // [optional] 'hold' time accumulated
	// Other-Leg: oneof below or nothing
	Commutation   string  `protobuf:"bytes,18,opt,name=commutation,proto3" json:"commutation,omitempty"` // [optional] 'originator' | 'originatee' FIXME: 'bridge' ?
	Originator    *Caller `protobuf:"bytes,19,opt,name=originator,proto3" json:"originator,omitempty"`   // defines::leg[A]; thisis:leg[B]
	Originatee    *Caller `protobuf:"bytes,20,opt,name=originatee,proto3" json:"originatee,omitempty"`   // defines::leg[B]; thisis:leg[A]
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Caller) Reset() {
	*x = Caller{}
	mi := &file_calls_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Caller) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Caller) ProtoMessage() {}

func (x *Caller) ProtoReflect() protoreflect.Message {
	mi := &file_calls_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Caller.ProtoReflect.Descriptor instead.
func (*Caller) Descriptor() ([]byte, []int) {
	return file_calls_proto_rawDescGZIP(), []int{3}
}

func (x *Caller) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Caller) GetProto() string {
	if x != nil {
		return x.Proto
	}
	return ""
}

func (x *Caller) GetOrigin() *CallerId {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *Caller) GetCaller() *CallerId {
	if x != nil {
		return x.Caller
	}
	return nil
}

func (x *Caller) GetCallee() *CallerId {
	if x != nil {
		return x.Callee
	}
	return nil
}

func (x *Caller) GetANI() string {
	if x != nil {
		return x.ANI
	}
	return ""
}

func (x *Caller) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *Caller) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *Caller) GetTransferred() string {
	if x != nil {
		return x.Transferred
	}
	return ""
}

func (x *Caller) GetCreatedAt() uint64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Caller) GetProgressAt() uint64 {
	if x != nil {
		return x.ProgressAt
	}
	return 0
}

func (x *Caller) GetProgressMediaAt() uint64 {
	if x != nil {
		return x.ProgressMediaAt
	}
	return 0
}

func (x *Caller) GetAnsweredAt() uint64 {
	if x != nil {
		return x.AnsweredAt
	}
	return 0
}

func (x *Caller) GetBridgedAt() uint64 {
	if x != nil {
		return x.BridgedAt
	}
	return 0
}

func (x *Caller) GetHangupAt() uint64 {
	if x != nil {
		return x.HangupAt
	}
	return 0
}

func (x *Caller) GetOnholdAt() uint64 {
	if x != nil {
		return x.OnholdAt
	}
	return 0
}

func (x *Caller) GetOnholdMs() uint64 {
	if x != nil {
		return x.OnholdMs
	}
	return 0
}

func (x *Caller) GetCommutation() string {
	if x != nil {
		return x.Commutation
	}
	return ""
}

func (x *Caller) GetOriginator() *Caller {
	if x != nil {
		return x.Originator
	}
	return nil
}

func (x *Caller) GetOriginatee() *Caller {
	if x != nil {
		return x.Originatee
	}
	return nil
}

type Channel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`           // [required] unique_id
	Proto         string                 `protobuf:"bytes,2,opt,name=proto,proto3" json:"proto,omitempty"`         // [required] source; protocol
	State         string                 `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`         // [required] call_state
	Active        string                 `protobuf:"bytes,4,opt,name=active,proto3" json:"active,omitempty"`       // [optional] answer_state
	Hangup        string                 `protobuf:"bytes,5,opt,name=hangup,proto3" json:"hangup,omitempty"`       // [optional] hangup_cause
	Profile       *Caller                `protobuf:"bytes,6,opt,name=profile,proto3" json:"profile,omitempty"`     // [required] profile in front of this channel
	Direction     string                 `protobuf:"bytes,7,opt,name=direction,proto3" json:"direction,omitempty"` // [required] inbound | outbound
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Channel) Reset() {
	*x = Channel{}
	mi := &file_calls_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Channel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Channel) ProtoMessage() {}

func (x *Channel) ProtoReflect() protoreflect.Message {
	mi := &file_calls_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Channel.ProtoReflect.Descriptor instead.
func (*Channel) Descriptor() ([]byte, []int) {
	return file_calls_proto_rawDescGZIP(), []int{4}
}

func (x *Channel) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Channel) GetProto() string {
	if x != nil {
		return x.Proto
	}
	return ""
}

func (x *Channel) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Channel) GetActive() string {
	if x != nil {
		return x.Active
	}
	return ""
}

func (x *Channel) GetHangup() string {
	if x != nil {
		return x.Hangup
	}
	return ""
}

func (x *Channel) GetProfile() *Caller {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *Channel) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

type Call struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"` // [optional] !uuid ? channel.uuid : uuid
	Channel       *Channel               `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Call) Reset() {
	*x = Call{}
	mi := &file_calls_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Call) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Call) ProtoMessage() {}

func (x *Call) ProtoReflect() protoreflect.Message {
	mi := &file_calls_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Call.ProtoReflect.Descriptor instead.
func (*Call) Descriptor() ([]byte, []int) {
	return file_calls_proto_rawDescGZIP(), []int{5}
}

func (x *Call) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Call) GetChannel() *Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

var File_calls_proto protoreflect.FileDescriptor

var file_calls_proto_rawDesc = string([]byte{
	0x0a, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61,
	0x70, 0x69, 0x1a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5c,
	0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x52,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x34, 0x0a, 0x13,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0x36, 0x0a, 0x08, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x9a, 0x05, 0x0a, 0x06, 0x43,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x25, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x52, 0x06,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x25, 0x0a, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x61, 0x6c,
	0x6c, 0x65, 0x72, 0x49, 0x64, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x25, 0x0a,
	0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x52, 0x06, 0x63, 0x61,
	0x6c, 0x6c, 0x65, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x4e, 0x49, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x41, 0x4e, 0x49, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x72, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x41, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x41, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x62, 0x72, 0x69, 0x64, 0x67,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x61, 0x6e, 0x67, 0x75, 0x70, 0x5f, 0x61,
	0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x68, 0x61, 0x6e, 0x67, 0x75, 0x70, 0x41,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x6e, 0x68, 0x6f, 0x6c, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6f, 0x6e, 0x68, 0x6f, 0x6c, 0x64, 0x41, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x6f, 0x6e, 0x68, 0x6f, 0x6c, 0x64, 0x5f, 0x6d, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x6f, 0x6e, 0x68, 0x6f, 0x6c, 0x64, 0x4d, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63,
	0x6f, 0x6d, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a,
	0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x0a,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x2b, 0x0a, 0x0a, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x0a, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x65, 0x22, 0xbe, 0x01, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68,
	0x61, 0x6e, 0x67, 0x75, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x61, 0x6e,
	0x67, 0x75, 0x70, 0x12, 0x25, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x42, 0x0a, 0x04, 0x43, 0x61, 0x6c, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x32, 0x51, 0x0a, 0x0b,
	0x43, 0x61, 0x6c, 0x6c, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x0b, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x43, 0x61, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x55, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x42, 0x0a, 0x43, 0x61, 0x6c, 0x6c,
	0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x12, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65,
	0x6c, 0x2e, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x3b, 0x61, 0x70, 0x69, 0xa2, 0x02, 0x03, 0x41,
	0x58, 0x58, 0xaa, 0x02, 0x03, 0x41, 0x70, 0x69, 0xca, 0x02, 0x03, 0x41, 0x70, 0x69, 0xe2, 0x02,
	0x0f, 0x41, 0x70, 0x69, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x03, 0x41, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_calls_proto_rawDescOnce sync.Once
	file_calls_proto_rawDescData []byte
)

func file_calls_proto_rawDescGZIP() []byte {
	file_calls_proto_rawDescOnce.Do(func() {
		file_calls_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_calls_proto_rawDesc), len(file_calls_proto_rawDesc)))
	})
	return file_calls_proto_rawDescData
}

var file_calls_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_calls_proto_goTypes = []any{
	(*SearchCallsRequest)(nil),  // 0: api.SearchCallsRequest
	(*SearchCallsResponse)(nil), // 1: api.SearchCallsResponse
	(*CallerId)(nil),            // 2: api.CallerId
	(*Caller)(nil),              // 3: api.Caller
	(*Channel)(nil),             // 4: api.Channel
	(*Call)(nil),                // 5: api.Call
	(*UserId)(nil),              // 6: api.UserId
	(*DeviceId)(nil),            // 7: api.DeviceId
}
var file_calls_proto_depIdxs = []int32{
	6,  // 0: api.SearchCallsRequest.user:type_name -> api.UserId
	7,  // 1: api.SearchCallsRequest.device:type_name -> api.DeviceId
	5,  // 2: api.SearchCallsResponse.list:type_name -> api.Call
	2,  // 3: api.Caller.origin:type_name -> api.CallerId
	2,  // 4: api.Caller.caller:type_name -> api.CallerId
	2,  // 5: api.Caller.callee:type_name -> api.CallerId
	3,  // 6: api.Caller.originator:type_name -> api.Caller
	3,  // 7: api.Caller.originatee:type_name -> api.Caller
	3,  // 8: api.Channel.profile:type_name -> api.Caller
	4,  // 9: api.Call.channel:type_name -> api.Channel
	0,  // 10: api.CallManager.SearchCalls:input_type -> api.SearchCallsRequest
	1,  // 11: api.CallManager.SearchCalls:output_type -> api.SearchCallsResponse
	11, // [11:12] is the sub-list for method output_type
	10, // [10:11] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_calls_proto_init() }
func file_calls_proto_init() {
	if File_calls_proto != nil {
		return
	}
	file_users_proto_init()
	file_devices_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_calls_proto_rawDesc), len(file_calls_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_calls_proto_goTypes,
		DependencyIndexes: file_calls_proto_depIdxs,
		MessageInfos:      file_calls_proto_msgTypes,
	}.Build()
	File_calls_proto = out.File
	file_calls_proto_goTypes = nil
	file_calls_proto_depIdxs = nil
}
